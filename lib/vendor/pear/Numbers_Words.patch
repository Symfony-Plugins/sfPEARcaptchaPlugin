Index: Numbers/Words.php
===================================================================
--- Numbers/Words.php	(wersja 33074)
+++ Numbers/Words.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -53,21 +53,18 @@
      * @since  PHP 4.2.3
      * @return string  The corresponding word representation
      */
-    function toWords($num, $locale = 'en_US')
+    public static function toWords($num, $locale = 'en_US')
     {
-
-        include_once "Numbers/Words/lang.${locale}.php";
-
         $classname = "Numbers_Words_${locale}";
 
         if (!class_exists($classname)) {
-            return Numbers_Words::raiseError("Unable to include the Numbers/Words/lang.${locale}.php file");
+            return PEAR::raiseError("Unable to include the Numbers/Words/lang.${locale}.php file");
         }
 
         $methods = get_class_methods($classname);
 
         if (!in_array('toWords', $methods) && !in_array('towords', $methods)) {
-            return Numbers_Words::raiseError("Unable to find toWords method in '$classname' class");
+            return PEAR::raiseError("Unable to find toWords method in '$classname' class");
         }
 
         @$obj = new $classname;
@@ -102,22 +99,20 @@
      * @since  PHP 4.2.3
      * @return string
      */
-    function toCurrency($num, $locale = 'en_US', $int_curr = '')
+    public static function toCurrency($num, $locale = 'en_US', $int_curr = '')
     {
         $ret = $num;
 
-        @include_once "Numbers/Words/lang.${locale}.php";
-
         $classname = "Numbers_Words_${locale}";
 
         if (!class_exists($classname)) {
-            return Numbers_Words::raiseError("Unable to include the Numbers/Words/lang.${locale}.php file");
+            return PEAR::raiseError("Unable to include the Numbers/Words/lang.${locale}.php file");
         }
 
         $methods = get_class_methods($classname);
 
         if (!in_array('toCurrencyWords', $methods) && !in_array('tocurrencywords', $methods)) {
-            return Numbers_Words::raiseError("Unable to find toCurrencyWords method in '$classname' class");
+            return PEAR::raiseError("Unable to find toCurrencyWords method in '$classname' class");
         }
 
         @$obj = new $classname;
@@ -147,8 +142,6 @@
             
             if ($round_digit >= 5) {
                 // round up without losing precision
-                include_once "Math/BigInteger.php";
-
                 $int = new Math_BigInteger(join($currency));
                 $int = $int->add(new Math_BigInteger(1));
                 $int_str = $int->toString();
@@ -183,7 +176,7 @@
      * @static
      * @return mixed[]
      */
-    function getLocales($locale = null)
+    public static function getLocales($locale = null)
     {
         $ret = array();
         if (isset($locale) && is_string($locale)) {
@@ -210,24 +203,6 @@
         return $ret;
     }
     // }}}
-
-    // {{{ raiseError()
-    /**
-     * Trigger a PEAR error
-     *
-     * To improve performances, the PEAR.php file is included dynamically.
-     *
-     * @param string $msg error message
-     *
-     * @return PEAR_Error
-     */
-    function raiseError($msg)
-    {
-        include_once 'PEAR.php';
-        return PEAR::raiseError($msg);
-    }
-    // }}}
 }
 
 // }}}
-?>
Index: Numbers/Words/lang.nl.php
===================================================================
--- Numbers/Words/lang.nl.php	(wersja 33074)
+++ Numbers/Words/lang.nl.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -23,19 +23,6 @@
  */
 
 /**
- *
- * Class for translating numbers into Dutch.
- * @author Piotr Klaban
- * @author WHAM van Dinter (for Dutch Translations)
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
  * Class for translating numbers into Dutch.
  *
  * @category Numbers
@@ -45,7 +32,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_nl extends Numbers_Words
+class Numbers_Words_nl
 {
 
     // {{{ properties
@@ -55,28 +42,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'nl';
+    public $locale = 'nl';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Dutch';
+    public $lang = 'Dutch';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Nederlands';
+    public $lang_native = 'Nederlands';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'Minus'; // minus sign
+    private $_minus = 'Minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
@@ -85,7 +72,7 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('Duizend','Duizend'),
         6 => array('Miljoen','Miljoen'),
@@ -125,7 +112,7 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'nul', 'een', 'twee', 'drie', 'vier',
         'vijf', 'zes', 'zeven', 'acht', 'negen'
     );
@@ -135,14 +122,14 @@
      * @var string
      * @access private
      */
-    var $_sep = '';
+    private $_sep = '';
 
     /**
      * The exponent word separator
      * @var string
      * @access private
      */
-    var $_sep2 = '-';
+    private $_sep2 = '-';
 
     // }}}
     // {{{ toWords()
@@ -165,7 +152,7 @@
      * @author WHAM van Dinter <willem@fkkc.nl>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -331,5 +318,3 @@
     }
     // }}}
 }
-
-?>
Index: Numbers/Words/lang.en_US.php
===================================================================
--- Numbers/Words/lang.en_US.php	(wersja 33074)
+++ Numbers/Words/lang.en_US.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,25 +25,13 @@
 /**
  * Class for translating numbers into American English.
  *
- * @author Piotr Klaban
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into American English.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Piotr Klaban <makler@man.torun.pl>
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_en_US extends Numbers_Words
+class Numbers_Words_en_US
 {
 
     // {{{ properties
@@ -53,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'en_US';
+    public $locale = 'en_US';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'American English';
+    public $lang = 'American English';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'American English';
+    public $lang_native = 'American English';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'minus'; // minus sign
+    private $_minus = 'minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
@@ -85,7 +73,7 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('thousand'),
         6 => array('million'),
@@ -207,7 +195,7 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'zero', 'one', 'two', 'three', 'four',
         'five', 'six', 'seven', 'eight', 'nine'
     );
@@ -217,7 +205,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The currency names (based on the below links,
@@ -229,7 +217,7 @@
      * @link http://www.shoestring.co.kr/world/p.visa/change.htm Currency names in English
      * @access private
      */
-    var $_currency_names = array(
+    private $_currency_names = array(
       'ALL' => array(array('lek'), array('qindarka')),
       'AUD' => array(array('Australian dollar'), array('cent')),
       'BAM' => array(array('convertible marka'), array('fenig')),
@@ -248,7 +236,7 @@
       'HRK' => array(array('Croatian kuna'), array('lipa')),
       'HUF' => array(array('forint'), array('filler')),
       'ILS' => array(array('new sheqel','new sheqels'), array('agora','agorot')),
-      'ISK' => array(array('Icelandic króna'), array('aurar')),
+      'ISK' => array(array('Icelandic krÃ³na'), array('aurar')),
       'JPY' => array(array('yen'), array('sen')),
       'LTL' => array(array('litas'), array('cent')),
       'LVL' => array(array('lat'), array('sentim')),
@@ -261,7 +249,7 @@
       'SEK' => array(array('Swedish krona'), array('oere')),
       'SIT' => array(array('Tolar'), array('stotinia')),
       'SKK' => array(array('Slovak koruna'), array()),
-      'TRL' => array(array('lira'), array('kuruþ')),
+      'TRL' => array(array('lira'), array('kuruÃ¾')),
       'UAH' => array(array('hryvna'), array('cent')),
       'USD' => array(array('dollar'), array('cent')),
       'YUM' => array(array('dinars'), array('para')),
@@ -273,7 +261,7 @@
      * @var string
      * @access public
      */
-    var $def_currency = 'USD'; // American dollar
+    public $def_currency = 'USD'; // American dollar
 
     // }}}
     // {{{ toWords()
@@ -295,7 +283,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -480,7 +468,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  Numbers_Words 0.4
      */
-    function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
+    public function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
     {
         $int_curr = strtoupper($int_curr);
         if (!isset($this->_currency_names[$int_curr])) {
@@ -522,5 +510,3 @@
     // }}}
 
 }
-
-?>
Index: Numbers/Words/lang.en_GB.php
===================================================================
--- Numbers/Words/lang.en_GB.php	(wersja 33074)
+++ Numbers/Words/lang.en_GB.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,25 +25,13 @@
 /**
  * Class for translating numbers into British English.
  *
- * @author Piotr Klaban
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into British English.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Piotr Klaban <makler@man.torun.pl>
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_en_GB extends Numbers_Words
+class Numbers_Words_en_GB
 {
 
     // {{{ properties
@@ -53,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'en_GB';
+    public $locale = 'en_GB';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'British English';
+    public $lang = 'British English';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'British English';
+    public $lang_native = 'British English';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'minus'; // minus sign
+    private $_minus = 'minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
@@ -83,7 +71,7 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('thousand'),
         6 => array('million'),
@@ -115,7 +103,7 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'zero', 'one', 'two', 'three', 'four',
         'five', 'six', 'seven', 'eight', 'nine'
     );
@@ -125,7 +113,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The currency names (based on the below links,
@@ -137,7 +125,7 @@
      * @link http://www.shoestring.co.kr/world/p.visa/change.htm Currency names in English
      * @access private
      */
-    var $_currency_names = array(
+    private $_currency_names = array(
       'ALL' => array(array('lek'), array('qindarka')),
       'AUD' => array(array('Australian dollar'), array('cent')),
       'BAM' => array(array('convertible marka'), array('fenig')),
@@ -156,7 +144,7 @@
       'HRK' => array(array('Croatian kuna'), array('lipa')),
       'HUF' => array(array('forint'), array('filler')),
       'ILS' => array(array('new sheqel','new sheqels'), array('agora','agorot')),
-      'ISK' => array(array('Icelandic króna'), array('aurar')),
+      'ISK' => array(array('Icelandic krÃ³na'), array('aurar')),
       'JPY' => array(array('yen'), array('sen')),
       'LTL' => array(array('litas'), array('cent')),
       'LVL' => array(array('lat'), array('sentim')),
@@ -169,7 +157,7 @@
       'SEK' => array(array('Swedish krona'), array('oere')),
       'SIT' => array(array('Tolar'), array('stotinia')),
       'SKK' => array(array('Slovak koruna'), array()),
-      'TRL' => array(array('lira'), array('kuruþ')),
+      'TRL' => array(array('lira'), array('kuruÃ¾')),
       'UAH' => array(array('hryvna'), array('cent')),
       'USD' => array(array('dollar'), array('cent')),
       'YUM' => array(array('dinars'), array('para')),
@@ -181,7 +169,7 @@
      * @var string
      * @access public
      */
-    var $def_currency = 'GBP'; // English pound
+    public $def_currency = 'GBP'; // English pound
 
     // }}}
     // {{{ toWords()
@@ -203,7 +191,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -388,7 +376,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  Numbers_Words 0.13.1
      */
-    function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
+    public function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
     {
         $int_curr = strtoupper($int_curr);
         if (!isset($this->_currency_names[$int_curr])) {
@@ -431,5 +419,3 @@
 
 
 }
-
-?>
Index: Numbers/Words/lang.pl.php
===================================================================
--- Numbers/Words/lang.pl.php	(wersja 33074)
+++ Numbers/Words/lang.pl.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,25 +25,13 @@
 /**
  * Class for translating numbers into Polish.
  *
- * @author Piotr Klaban
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Polish.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Piotr Klaban <makler@man.torun.pl>
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_pl extends Numbers_Words
+class Numbers_Words_pl
 {
 
     // {{{ properties
@@ -53,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'pl';
+    public $locale = 'pl';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Polish';
+    public $lang = 'Polish';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'polski';
+    public $lang_native = 'polski';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'minus'; // minus sign
+    private $_minus = 'minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
@@ -84,51 +72,51 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
-       // potêga dziesi±tki => liczba pojedyncza, podwójna, mnoga
+    private $_exponent = array(
+       // potÄga dziesiÄtki => liczba pojedyncza, podwÃ³jna, mnoga
         0 => array('','',''),
-        3 => array('tysi±c','tysi±ce','tysiêcy'),
-        6 => array('milion','miliony','milionów'),
-        9 => array('miliard','miliardy','miliardów'),
-       12 => array('bilion','biliony','bilionów'),
-       15 => array('biliard','biliardy','biliardów'),
-       18 => array('trylion','tryliony','trylionów'),
-       21 => array('tryliard','tryliardy','tryliardów'),
-       24 => array('kwadrylion','kwadryliony','kwadrylionów'),
-       27 => array('kwadryliard','kwadryliardy','kwadryliardów'),
-       30 => array('kwintylion','kwintyliony','kwintylionów'),
-       33 => array('kwintyliiard','kwintyliardy','kwintyliardów'),
-       36 => array('sekstylion','sekstyliony','sekstylionów'),
-       39 => array('sekstyliard','sekstyliardy','sekstyliardów'),
-       42 => array('septylion','septyliony','septylionów'),
-       45 => array('septyliard','septyliardy','septyliardów'),
-       48 => array('oktylion','oktyliony','oktylionów'),
-       51 => array('oktyliard','oktyliardy','oktyliardów'),
-       54 => array('nonylion','nonyliony','nonylionów'),
-       57 => array('nonyliard','nonyliardy','nonyliardów'),
-       60 => array('decylion','decyliony','decylionów'),
-       63 => array('decyliard','decyliardy','decyliardów'),
-      100 => array('centylion','centyliony','centylionów'),
-      103 => array('centyliard','centyliardy','centyliardów'),
+        3 => array('tysiÄc','tysiÄce','tysiÄcy'),
+        6 => array('milion','miliony','milionÃ³w'),
+        9 => array('miliard','miliardy','miliardÃ³w'),
+       12 => array('bilion','biliony','bilionÃ³w'),
+       15 => array('biliard','biliardy','biliardÃ³w'),
+       18 => array('trylion','tryliony','trylionÃ³w'),
+       21 => array('tryliard','tryliardy','tryliardÃ³w'),
+       24 => array('kwadrylion','kwadryliony','kwadrylionÃ³w'),
+       27 => array('kwadryliard','kwadryliardy','kwadryliardÃ³w'),
+       30 => array('kwintylion','kwintyliony','kwintylionÃ³w'),
+       33 => array('kwintyliiard','kwintyliardy','kwintyliardÃ³w'),
+       36 => array('sekstylion','sekstyliony','sekstylionÃ³w'),
+       39 => array('sekstyliard','sekstyliardy','sekstyliardÃ³w'),
+       42 => array('septylion','septyliony','septylionÃ³w'),
+       45 => array('septyliard','septyliardy','septyliardÃ³w'),
+       48 => array('oktylion','oktyliony','oktylionÃ³w'),
+       51 => array('oktyliard','oktyliardy','oktyliardÃ³w'),
+       54 => array('nonylion','nonyliony','nonylionÃ³w'),
+       57 => array('nonyliard','nonyliardy','nonyliardÃ³w'),
+       60 => array('decylion','decyliony','decylionÃ³w'),
+       63 => array('decyliard','decyliardy','decyliardÃ³w'),
+      100 => array('centylion','centyliony','centylionÃ³w'),
+      103 => array('centyliard','centyliardy','centyliardÃ³w'),
       120 => array('wicylion','wicylion','wicylion'),
-      123 => array('wicyliard','wicyliardy','wicyliardów'),
+      123 => array('wicyliard','wicyliardy','wicyliardÃ³w'),
       180 => array('trycylion','trycylion','trycylion'),
-      183 => array('trycyliard','trycyliardy','trycyliardów'),
+      183 => array('trycyliard','trycyliardy','trycyliardÃ³w'),
       240 => array('kwadragilion','kwadragilion','kwadragilion'),
-      243 => array('kwadragiliard','kwadragiliardy','kwadragiliardów'),
+      243 => array('kwadragiliard','kwadragiliardy','kwadragiliardÃ³w'),
       300 => array('kwinkwagilion','kwinkwagilion','kwinkwagilion'),
-      303 => array('kwinkwagiliard','kwinkwagiliardy','kwinkwagiliardów'),
+      303 => array('kwinkwagiliard','kwinkwagiliardy','kwinkwagiliardÃ³w'),
       360 => array('seskwilion','seskwilion','seskwilion'),
-      363 => array('seskwiliard','seskwiliardy','seskwiliardów'),
+      363 => array('seskwiliard','seskwiliardy','seskwiliardÃ³w'),
       420 => array('septagilion','septagilion','septagilion'),
-      423 => array('septagiliard','septagiliardy','septagiliardów'),
+      423 => array('septagiliard','septagiliardy','septagiliardÃ³w'),
       480 => array('oktogilion','oktogilion','oktogilion'),
-      483 => array('oktogiliard','oktogiliardy','oktogiliardów'),
+      483 => array('oktogiliard','oktogiliardy','oktogiliardÃ³w'),
       540 => array('nonagilion','nonagilion','nonagilion'),
-      543 => array('nonagiliard','nonagiliardy','nonagiliardów'),
-      600 => array('centylion','centyliony','centylionów'),
-      603 => array('centyliard','centyliardy','centyliardów'),
-      6000018 => array('milinilitrylion','milinilitryliony','milinilitrylionów')
+      543 => array('nonagiliard','nonagiliardy','nonagiliardÃ³w'),
+      600 => array('centylion','centyliony','centylionÃ³w'),
+      603 => array('centyliard','centyliardy','centyliardÃ³w'),
+      6000018 => array('milinilitrylion','milinilitryliony','milinilitrylionÃ³w')
         );
 
     /**
@@ -136,9 +124,9 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'zero', 'jeden', 'dwa', 'trzy', 'cztery',
-        'piêæ', 'sze¶æ', 'siedem', 'osiem', 'dziewiêæ'
+        'piÄÄ', 'szeÅÄ', 'siedem', 'osiem', 'dziewiÄÄ'
     );
 
     /**
@@ -146,7 +134,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The currency names (based on the below links,
@@ -158,43 +146,43 @@
      * @link http://pieniadz.hoga.pl/waluty_objasnienia.asp Currency service
      * @access private
      */
-    var $_currency_names = array(
-      'ALL' => array(array('lek','leki','leków'), array('quindarka','quindarki','quindarek')),
-      'AUD' => array(array('dolar australijski', 'dolary australijskie', 'dolarów australijskich'), array('cent', 'centy', 'centów')),
-      'BAM' => array(array('marka','marki','marek'), array('fenig','fenigi','fenigów')),
+    private $_currency_names = array(
+      'ALL' => array(array('lek','leki','lekÃ³w'), array('quindarka','quindarki','quindarek')),
+      'AUD' => array(array('dolar australijski', 'dolary australijskie', 'dolarÃ³w australijskich'), array('cent', 'centy', 'centÃ³w')),
+      'BAM' => array(array('marka','marki','marek'), array('fenig','fenigi','fenigÃ³w')),
       'BGN' => array(array('lew','lewy','lew'), array('stotinka','stotinki','stotinek')),
-      'BRL' => array(array('real','reale','realów'), array('centavos','centavos','centavos')),
+      'BRL' => array(array('real','reale','realÃ³w'), array('centavos','centavos','centavos')),
       'BYR' => array(array('rubel','ruble','rubli'), array('kopiejka','kopiejki','kopiejek')),
-      'CAD' => array(array('dolar kanadyjski', 'dolary kanadyjskie', 'dolarów kanadyjskich'), array('cent', 'centy', 'centów')),
-      'CHF' => array(array('frank szwajcarski','franki szwajcarskie','franków szwajcarskich'), array('rapp','rappy','rappów')),
-      'CYP' => array(array('funt cypryjski','funty cypryjskie','funtów cypryjskich'), array('cent', 'centy', 'centów')),
+      'CAD' => array(array('dolar kanadyjski', 'dolary kanadyjskie', 'dolarÃ³w kanadyjskich'), array('cent', 'centy', 'centÃ³w')),
+      'CHF' => array(array('frank szwajcarski','franki szwajcarskie','frankÃ³w szwajcarskich'), array('rapp','rappy','rappÃ³w')),
+      'CYP' => array(array('funt cypryjski','funty cypryjskie','funtÃ³w cypryjskich'), array('cent', 'centy', 'centÃ³w')),
       'CZK' => array(array('korona czeska','korony czeskie','koron czeskich'), array('halerz','halerze','halerzy')),
-      'DKK' => array(array('korona duñska','korony duñskie','koron duñskich'), array('ore','ore','ore')),
-      'EEK' => array(array('korona estoñska','korony estoñskie','koron estoñskich'), array('senti','senti','senti')),
-      'EUR' => array(array('euro', 'euro', 'euro'), array('eurocent', 'eurocenty', 'eurocentów')),
-      'GBP' => array(array('funt szterling','funty szterlingi','funtów szterlingów'), array('pens','pensy','pensów')),
-      'HKD' => array(array('dolar Hongkongu','dolary Hongkongu','dolarów Hongkongu'), array('cent', 'centy', 'centów')),
+      'DKK' => array(array('korona duÅska','korony duÅskie','koron duÅskich'), array('ore','ore','ore')),
+      'EEK' => array(array('korona estoÅska','korony estoÅskie','koron estoÅskich'), array('senti','senti','senti')),
+      'EUR' => array(array('euro', 'euro', 'euro'), array('eurocent', 'eurocenty', 'eurocentÃ³w')),
+      'GBP' => array(array('funt szterling','funty szterlingi','funtÃ³w szterlingÃ³w'), array('pens','pensy','pensÃ³w')),
+      'HKD' => array(array('dolar Hongkongu','dolary Hongkongu','dolarÃ³w Hongkongu'), array('cent', 'centy', 'centÃ³w')),
       'HRK' => array(array('kuna','kuny','kun'), array('lipa','lipy','lip')),
-      'HUF' => array(array('forint','forinty','forintów'), array('filler','fillery','fillerów')),
+      'HUF' => array(array('forint','forinty','forintÃ³w'), array('filler','fillery','fillerÃ³w')),
       'ILS' => array(array('nowy szekel','nowe szekele','nowych szekeli'), array('agora','agory','agorot')),
       'ISK' => array(array('korona islandzka','korony islandzkie','koron islandzkich'), array('aurar','aurar','aurar')),
-      'JPY' => array(array('jen','jeny','jenów'), array('sen','seny','senów')),
-      'LTL' => array(array('lit','lity','litów'), array('cent', 'centy', 'centów')),
-      'LVL' => array(array('³at','³aty','³atów'), array('sentim','sentimy','sentimów')),
-      'MKD' => array(array('denar','denary','denarów'), array('deni','deni','deni')),
-      'MTL' => array(array('lira maltañska','liry maltañskie','lir maltañskich'), array('centym','centymy','centymów')),
+      'JPY' => array(array('jen','jeny','jenÃ³w'), array('sen','seny','senÃ³w')),
+      'LTL' => array(array('lit','lity','litÃ³w'), array('cent', 'centy', 'centÃ³w')),
+      'LVL' => array(array('Åat','Åaty','ÅatÃ³w'), array('sentim','sentimy','sentimÃ³w')),
+      'MKD' => array(array('denar','denary','denarÃ³w'), array('deni','deni','deni')),
+      'MTL' => array(array('lira maltaÅska','liry maltaÅskie','lir maltaÅskich'), array('centym','centymy','centymÃ³w')),
       'NOK' => array(array('korona norweska','korony norweskie','koron norweskich'), array('oere','oere','oere')),
-      'PLN' => array(array('z³oty', 'z³ote', 'z³otych'), array('grosz', 'grosze', 'groszy')),
+      'PLN' => array(array('zÅoty', 'zÅote', 'zÅotych'), array('grosz', 'grosze', 'groszy')),
       'ROL' => array(array('lej','leje','lei'), array('bani','bani','bani')),
       'RUB' => array(array('rubel','ruble','rubli'), array('kopiejka','kopiejki','kopiejek')),
       'SEK' => array(array('korona szwedzka','korony szwedzkie','koron szweckich'), array('oere','oere','oere')),
-      'SIT' => array(array('tolar','tolary','tolarów'), array('stotinia','stotinie','stotini')),
-      'SKK' => array(array('korona s³owacka','korony s³owackie','koron s³owackich'), array('halerz','halerze','halerzy')),
+      'SIT' => array(array('tolar','tolary','tolarÃ³w'), array('stotinia','stotinie','stotini')),
+      'SKK' => array(array('korona sÅowacka','korony sÅowackie','koron sÅowackich'), array('halerz','halerze','halerzy')),
       'TRL' => array(array('lira turecka','liry tureckie','lir tureckich'), array('kurusza','kurysze','kuruszy')),
-      'UAH' => array(array('hrywna','hrywna','hrywna'), array('cent', 'centy', 'centów')),
-      'USD' => array(array('dolar','dolary','dolarów'), array('cent', 'centy', 'centów')),
-      'YUM' => array(array('dinar','dinary','dinarów'), array('para','para','para')),
-      'ZAR' => array(array('rand','randy','randów'), array('cent', 'centy', 'centów'))
+      'UAH' => array(array('hrywna','hrywna','hrywna'), array('cent', 'centy', 'centÃ³w')),
+      'USD' => array(array('dolar','dolary','dolarÃ³w'), array('cent', 'centy', 'centÃ³w')),
+      'YUM' => array(array('dinar','dinary','dinarÃ³w'), array('para','para','para')),
+      'ZAR' => array(array('rand','randy','randÃ³w'), array('cent', 'centy', 'centÃ³w'))
     );
 
     /**
@@ -202,7 +190,7 @@
      * @var string
      * @access public
      */
-    var $def_currency = 'PLN'; // Polish zloty
+    public $def_currency = 'PLN'; // Polish zloty
 
     // }}}
     // {{{ toWords()
@@ -224,7 +212,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -288,7 +276,7 @@
 
         switch ($h) {
         case 9:
-            $ret .= $this->_sep . 'dziewiêæset';
+            $ret .= $this->_sep . 'dziewiÄÄset';
             break;
 
         case 8:
@@ -300,11 +288,11 @@
             break;
 
         case 6:
-            $ret .= $this->_sep . 'sze¶æset';
+            $ret .= $this->_sep . 'szeÅÄset';
             break;
 
         case 5:
-            $ret .= $this->_sep . 'piêæset';
+            $ret .= $this->_sep . 'piÄÄset';
             break;
 
         case 4:
@@ -316,7 +304,7 @@
             break;
 
         case 2:
-            $ret .= $this->_sep . 'dwie¶cie';
+            $ret .= $this->_sep . 'dwieÅcie';
             break;
 
         case 1:
@@ -330,52 +318,52 @@
         case 7:
         case 6:
         case 5:
-            $ret .= $this->_sep . $this->_digits[$t] . 'dziesi±t';
+            $ret .= $this->_sep . $this->_digits[$t] . 'dziesiÄt';
             break;
 
         case 4:
-            $ret .= $this->_sep . 'czterdzie¶ci';
+            $ret .= $this->_sep . 'czterdzieÅci';
             break;
 
         case 3:
-            $ret .= $this->_sep . 'trzydzie¶ci';
+            $ret .= $this->_sep . 'trzydzieÅci';
             break;
 
         case 2:
-            $ret .= $this->_sep . 'dwadzie¶cia';
+            $ret .= $this->_sep . 'dwadzieÅcia';
             break;
 
         case 1:
             switch ($d) {
             case 0:
-                $ret .= $this->_sep . 'dziesiêæ';
+                $ret .= $this->_sep . 'dziesiÄÄ';
                 break;
 
             case 1:
-                $ret .= $this->_sep . 'jedena¶cie';
+                $ret .= $this->_sep . 'jedenaÅcie';
                 break;
 
             case 2:
             case 3:
             case 7:
             case 8:
-                $ret .= $this->_sep . $this->_digits[$d] . 'na¶cie';
+                $ret .= $this->_sep . $this->_digits[$d] . 'naÅcie';
                 break;
 
             case 4:
-                $ret .= $this->_sep . 'czterna¶cie';
+                $ret .= $this->_sep . 'czternaÅcie';
                 break;
 
             case 5:
-                $ret .= $this->_sep . 'piêtna¶cie';
+                $ret .= $this->_sep . 'piÄtnaÅcie';
                 break;
 
             case 6:
-                $ret .= $this->_sep . 'szesna¶cie';
+                $ret .= $this->_sep . 'szesnaÅcie';
                 break;
 
             case 9:
-                $ret .= $this->_sep . 'dziewiêtna¶cie';
+                $ret .= $this->_sep . 'dziewiÄtnaÅcie';
                 break;
             }
             break;
@@ -451,7 +439,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  Numbers_Words 0.4
      */
-    function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
+    public function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
     {
         $int_curr = strtoupper($int_curr);
         if (!isset($this->_currency_names[$int_curr])) {
@@ -492,7 +480,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  Numbers_Words 0.4
      */
-    function _get_numlevel($num)
+    private function _get_numlevel($num)
     {
         if (strlen($num) > 3) {
             $num = substr($num, -3);
@@ -541,5 +529,3 @@
     }
     // }}}
 }
-
-?>
Index: Numbers/Words/lang.fr_BE.php
===================================================================
--- Numbers/Words/lang.fr_BE.php	(wersja 33074)
+++ Numbers/Words/lang.fr_BE.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -24,11 +24,6 @@
  */
 
 /**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
  * Class for translating numbers into French (Belgium).
  *
  * @category Numbers
@@ -38,7 +33,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_fr_BE extends Numbers_Words
+class Numbers_Words_fr_BE
 {
 
     // {{{ properties
@@ -48,28 +43,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'fr';
+    public $locale = 'fr';
 
     /**
      * Language name in English.
      * @var string
      * @access public
      */
-    var $lang = 'French';
+    public $lang = 'French';
 
     /**
      * Native language name.
      * @var string
      * @access public
      */
-    var $lang_native = 'Français';
+    public $lang_native = 'FranÃ§ais';
 
     /**
      * The words for some numbers.
      * @var string
      * @access private
      */
-    var $_misc_numbers = array(
+    private $_misc_numbers = array(
         10=>'dix',      // 10
             'onze',     // 11
             'douze',    // 12
@@ -93,63 +88,63 @@
      * @var string
      * @access private
      */
-    var $_digits = array(1=>"un", "deux", "trois", "quatre", "cinq", "six", "sept", "huit", "neuf");
+    private $_digits = array(1=>"un", "deux", "trois", "quatre", "cinq", "six", "sept", "huit", "neuf");
 
     /**
      * The word for zero.
      * @var string
      * @access private
      */
-    var $_zero = 'zéro';
+    private $_zero = 'zÃ©ro';
 
     /**
      * The word for infinity.
      * @var string
      * @access private
      */
-    var $_infinity = 'infini';
+    private $_infinity = 'infini';
 
     /**
      * The word for the "and" language construct.
      * @var string
      * @access private
      */
-    var $_and = 'et';
+    private $_and = 'et';
 
     /**
      * The word separator.
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The dash liaison.
      * @var string
      * @access private
      */
-    var $_dash = '-';
+    private $_dash = '-';
 
     /**
      * The word for the minus sign.
      * @var string
      * @access private
      */
-    var $_minus = 'moins'; // minus sign
+    private $_minus = 'moins'; // minus sign
 
     /**
      * The plural suffix (except for hundred).
      * @var string
      * @access private
      */
-    var $_plural = 's'; // plural suffix
+    private $_plural = 's'; // plural suffix
 
     /**
      * The suffixes for exponents (singular).
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => '',
         3 => 'mille',
         6 => 'million',
@@ -268,7 +263,7 @@
      * @author Kouber Saparev <kouber@php.net>
      * @since  PHP 4.2.3
      */
-    function _splitNumber($num)
+    private function _splitNumber($num)
     {
         if (is_string($num)) {
             $ret    = array();
@@ -303,7 +298,7 @@
      * @access private
      * @author Kouber Saparev <kouber@php.net>
      */
-    function _showDigitsGroup($num, $last = false)
+    private function _showDigitsGroup($num, $last = false)
     {
         $ret = '';
 
@@ -382,7 +377,7 @@
      * @access public
      * @author Kouber Saparev <kouber@php.net>
      */
-    function toWords($num = 0)
+    public function toWords($num = 0)
     {
         $ret = '';
 
@@ -431,4 +426,3 @@
     }
     // }}}
 }
-?>
Index: Numbers/Words/lang.lt.php
===================================================================
--- Numbers/Words/lang.lt.php	(wersja 33074)
+++ Numbers/Words/lang.lt.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,25 +25,13 @@
 /**
  * Class for translating numbers into Lithuanian.
  *
- * @author Laurynas Butkus
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Lithuanian.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Laurynas Butkus <lauris@night.lt>
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_lt extends Numbers_Words
+class Numbers_Words_lt
 {
 
     // {{{ properties
@@ -53,42 +41,42 @@
      * @var string
      * @access public
      */
-    var $locale = 'lt';
+    public $locale = 'lt';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Lithuanian';
+    public $lang = 'Lithuanian';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'lietuviðkai';
+    public $lang_native = 'lietuviÄkai';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'minus'; // minus sign
+    private $_minus = 'minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
-        3 => array('tûkstantis','tûkstanèiai','tûkstanèiø'),
-        6 => array('milijonas','milijonai','milijonø'),
-        9 => array('bilijonas','bilijonai','bilijonø'),
-       12 => array('trilijonas','trilijonai','trilijonø'),
-       15 => array('kvadrilijonas','kvadrilijonai','kvadrilijonø'),
-       18 => array('kvintilijonas','kvintilijonai','kvintilijonø')
+        3 => array('tÃ»kstantis','tÃ»kstanÄiai','tÃ»kstanÄiÃ¸'),
+        6 => array('milijonas','milijonai','milijonÃ¸'),
+        9 => array('bilijonas','bilijonai','bilijonÃ¸'),
+       12 => array('trilijonas','trilijonai','trilijonÃ¸'),
+       15 => array('kvadrilijonas','kvadrilijonai','kvadrilijonÃ¸'),
+       18 => array('kvintilijonas','kvintilijonai','kvintilijonÃ¸')
         );
 
     /**
@@ -96,9 +84,9 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'nulis', 'vienas', 'du', 'trys', 'keturi',
-        'penki', 'ðeði', 'septyni', 'aðtuoni', 'devyni'
+        'penki', 'ÄeÄi', 'septyni', 'aÄtuoni', 'devyni'
     );
 
     /**
@@ -106,14 +94,14 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The default currency name
      * @var string
      * @access public
      */
-    var $def_currency = 'LTL';
+    public $def_currency = 'LTL';
 
     // }}}
     // {{{ toWords()
@@ -135,7 +123,7 @@
      * @author Laurynas Butkus <lauris@night.lt>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -198,49 +186,49 @@
         }
 
         if ( $h > 1 ) {
-            $ret .= $this->_sep . $this->_digits[$h] . $this->_sep . 'ðimtai';
+            $ret .= $this->_sep . $this->_digits[$h] . $this->_sep . 'Äimtai';
         } elseif ( $h ) {
-            $ret .= $this->_sep . 'ðimtas';
+            $ret .= $this->_sep . 'Äimtas';
         }
 
         // ten, twenty etc.
         switch ($t) {
         case 9:
-            $ret .= $this->_sep . 'devyniasdeðimt';
+            $ret .= $this->_sep . 'devyniasdeÄimt';
             break;
 
         case 8:
-            $ret .= $this->_sep . 'aðtuoniasdeðimt';
+            $ret .= $this->_sep . 'aÄtuoniasdeÄimt';
             break;
 
         case 7:
-            $ret .= $this->_sep . 'septyniasdeðimt';
+            $ret .= $this->_sep . 'septyniasdeÄimt';
             break;
 
         case 6:
-            $ret .= $this->_sep . 'ðeðiasdeðimt';
+            $ret .= $this->_sep . 'ÄeÄiasdeÄimt';
             break;
 
         case 5:
-            $ret .= $this->_sep . 'penkiasdeðimt';
+            $ret .= $this->_sep . 'penkiasdeÄimt';
             break;
 
         case 4:
-            $ret .= $this->_sep . 'keturiasdeðimt';
+            $ret .= $this->_sep . 'keturiasdeÄimt';
             break;
 
         case 3:
-            $ret .= $this->_sep . 'trisdeðimt';
+            $ret .= $this->_sep . 'trisdeÄimt';
             break;
 
         case 2:
-            $ret .= $this->_sep . 'dvideðimt';
+            $ret .= $this->_sep . 'dvideÄimt';
             break;
 
         case 1:
             switch ($d) {
             case 0:
-                $ret .= $this->_sep . 'deðimt';
+                $ret .= $this->_sep . 'deÄimt';
                 break;
 
             case 1:
@@ -264,7 +252,7 @@
                 break;
 
             case 6:
-                $ret .= $this->_sep . 'ðeðiolika';
+                $ret .= $this->_sep . 'ÄeÄiolika';
                 break;
 
             case 7:
@@ -272,7 +260,7 @@
                 break;
 
             case 8:
-                $ret .= $this->_sep . 'aðtuoniolika';
+                $ret .= $this->_sep . 'aÄtuoniolika';
                 break;
 
             case 9:
@@ -319,5 +307,3 @@
     // }}}
 
 }
-
-?>
Index: Numbers/Words/lang.en_100.php
===================================================================
--- Numbers/Words/lang.en_100.php	(wersja 33074)
+++ Numbers/Words/lang.en_100.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,25 +25,13 @@
 /**
  * Class for translating numbers into Donald Knuth system, in English language.
  *
- * @author Piotr Klaban
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Donald Knuth system, in English language.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Piotr Klaban <makler@man.torun.pl>
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_en_100 extends Numbers_Words
+class Numbers_Words_en_100
 {
 
     // {{{ properties
@@ -53,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'en_100';
+    public $locale = 'en_100';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'English (Donald Knuth system)';
+    public $lang = 'English (Donald Knuth system)';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'English (Donald Knuth system)';
+    public $lang_native = 'English (Donald Knuth system)';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'minus'; // minus sign
+    private $_minus = 'minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
@@ -84,7 +72,7 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         2 => array('hundred'),
         4 => array('myriad'),
@@ -115,7 +103,7 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'zero', 'one', 'two', 'three', 'four',
         'five', 'six', 'seven', 'eight', 'nine'
     );
@@ -125,7 +113,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
     // }}}
     // {{{ toWords()
 
@@ -146,7 +134,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -312,5 +300,3 @@
     }
     // }}}
 }
-
-?>
Index: Numbers/Words/lang.ru.php
===================================================================
--- Numbers/Words/lang.ru.php	(wersja 33074)
+++ Numbers/Words/lang.ru.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -26,18 +26,6 @@
 /**
  * Class for translating numbers into Russian.
  *
- * @author Andrey Demenev
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Russian.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Piotr Klaban <makler@man.torun.pl>
@@ -45,7 +33,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_ru extends Numbers_Words
+class Numbers_Words_ru
 {
 
     // {{{ properties
@@ -55,28 +43,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'ru';
+    public $locale = 'ru';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Russian';
+    public $lang = 'Russian';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Ðóññêèé';
+    public $lang_native = 'Ð°ÑÑÑÑÑÑ';
     
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'ìèíóñ'; // minus sign
+    private $_minus = 'ÑÑÑÑÑ'; // minus sign
     
     /**
      * The sufixes for exponents (singular)
@@ -87,108 +75,108 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => '',
-        6 => 'ìèëëèîí',
-        9 => 'ìèëëèàðä',
-       12 => 'òðèëëèîí',
-       15 => 'êâàäðèëëèîí',
-       18 => 'êâèíòèëëèîí',
-       21 => 'ñåêñòèëëèîí',
-       24 => 'ñåïòèëëèîí',
-       27 => 'îêòèëëèîí',
-       30 => 'íîíèëëèîí',
-       33 => 'äåöèëëèîí',
-       36 => 'óíäåöèëëèîí',
-       39 => 'äóîäåöèëëèîí',
-       42 => 'òðåäåöèëëèîí',
-       45 => 'êâàòóîðäåöèëëèîí',
-       48 => 'êâèíäåöèëëèîí',
-       51 => 'ñåêñäåöèëëèîí',
-       54 => 'ñåïòåíäåöèëëèîí',
-       57 => 'îêòîäåöèëëèîí',
-       60 => 'íîâåìäåöèëëèîí',
-       63 => 'âèãèíòèëëèîí',
-       66 => 'óíâèãèíòèëëèîí',
-       69 => 'äóîâèãèíòèëëèîí',
-       72 => 'òðåâèãèíòèëëèîí',
-       75 => 'êâàòóîðâèãèíòèëëèîí',
-       78 => 'êâèíâèãèíòèëëèîí',
-       81 => 'ñåêñâèãèíòèëëèîí',
-       84 => 'ñåïòåíâèãèíòèëëèîí',
-       87 => 'îêòîâèãèíòèëëèîí',
-       90 => 'íîâåìâèãèíòèëëèîí',
-       93 => 'òðèãèíòèëëèîí',
-       96 => 'óíòðèãèíòèëëèîí',
-       99 => 'äóîòðèãèíòèëëèîí',
-       102 => 'òðåòðèãèíòèëëèîí',
-       105 => 'êâàòîðòðèãèíòèëëèîí',
-       108 => 'êâèíòðèãèíòèëëèîí',
-       111 => 'ñåêñòðèãèíòèëëèîí',
-       114 => 'ñåïòåíòðèãèíòèëëèîí',
-       117 => 'îêòîòðèãèíòèëëèîí',
-       120 => 'íîâåìòðèãèíòèëëèîí',
-       123 => 'êâàäðàãèíòèëëèîí',
-       126 => 'óíêâàäðàãèíòèëëèîí',
-       129 => 'äóîêâàäðàãèíòèëëèîí',
-       132 => 'òðåêâàäðàãèíòèëëèîí',
-       135 => 'êâàòîðêâàäðàãèíòèëëèîí',
-       138 => 'êâèíêâàäðàãèíòèëëèîí',
-       141 => 'ñåêñêâàäðàãèíòèëëèîí',
-       144 => 'ñåïòåíêâàäðàãèíòèëëèîí',
-       147 => 'îêòîêâàäðàãèíòèëëèîí',
-       150 => 'íîâåìêâàäðàãèíòèëëèîí',
-       153 => 'êâèíêâàãèíòèëëèîí',
-       156 => 'óíêâèíêàãèíòèëëèîí',
-       159 => 'äóîêâèíêàãèíòèëëèîí',
-       162 => 'òðåêâèíêàãèíòèëëèîí',
-       165 => 'êâàòîðêâèíêàãèíòèëëèîí',
-       168 => 'êâèíêâèíêàãèíòèëëèîí',
-       171 => 'ñåêñêâèíêàãèíòèëëèîí',
-       174 => 'ñåïòåíêâèíêàãèíòèëëèîí',
-       177 => 'îêòîêâèíêàãèíòèëëèîí',
-       180 => 'íîâåìêâèíêàãèíòèëëèîí',
-       183 => 'ñåêñàãèíòèëëèîí',
-       186 => 'óíñåêñàãèíòèëëèîí',
-       189 => 'äóîñåêñàãèíòèëëèîí',
-       192 => 'òðåñåêñàãèíòèëëèîí',
-       195 => 'êâàòîðñåêñàãèíòèëëèîí',
-       198 => 'êâèíñåêñàãèíòèëëèîí',
-       201 => 'ñåêññåêñàãèíòèëëèîí',
-       204 => 'ñåïòåíñåêñàãèíòèëëèîí',
-       207 => 'îêòîñåêñàãèíòèëëèîí',
-       210 => 'íîâåìñåêñàãèíòèëëèîí',
-       213 => 'ñåïòàãèíòèëëèîí',
-       216 => 'óíñåïòàãèíòèëëèîí',
-       219 => 'äóîñåïòàãèíòèëëèîí',
-       222 => 'òðåñåïòàãèíòèëëèîí',
-       225 => 'êâàòîðñåïòàãèíòèëëèîí',
-       228 => 'êâèíñåïòàãèíòèëëèîí',
-       231 => 'ñåêññåïòàãèíòèëëèîí',
-       234 => 'ñåïòåíñåïòàãèíòèëëèîí',
-       237 => 'îêòîñåïòàãèíòèëëèîí',
-       240 => 'íîâåìñåïòàãèíòèëëèîí',
-       243 => 'îêòîãèíòèëëèîí',
-       246 => 'óíîêòîãèíòèëëèîí',
-       249 => 'äóîîêòîãèíòèëëèîí',
-       252 => 'òðåîêòîãèíòèëëèîí',
-       255 => 'êâàòîðîêòîãèíòèëëèîí',
-       258 => 'êâèíîêòîãèíòèëëèîí',
-       261 => 'ñåêñîêòîãèíòèëëèîí',
-       264 => 'ñåïòîêòîãèíòèëëèîí',
-       267 => 'îêòîîêòîãèíòèëëèîí',
-       270 => 'íîâåìîêòîãèíòèëëèîí',
-       273 => 'íîíàãèíòèëëèîí',
-       276 => 'óííîíàãèíòèëëèîí',
-       279 => 'äóîíîíàãèíòèëëèîí',
-       282 => 'òðåíîíàãèíòèëëèîí',
-       285 => 'êâàòîðíîíàãèíòèëëèîí',
-       288 => 'êâèííîíàãèíòèëëèîí',
-       291 => 'ñåêñíîíàãèíòèëëèîí',
-       294 => 'ñåïòåííîíàãèíòèëëèîí',
-       297 => 'îêòîíîíàãèíòèëëèîí',
-       300 => 'íîâåìíîíàãèíòèëëèîí',
-       303 => 'öåíòèëëèîí'
+        6 => 'ÑÑÑÑÑÑÑ',
+        9 => 'ÑÑÑÑÑÑâÑ',
+       12 => 'ÑâÑÑÑÑÑÑ',
+       15 => 'ÑÑÑÑâÑÑÑÑÑÑ',
+       18 => 'ÑÑÑÑÑÑÑÑÑÑÑ',
+       21 => 'ÑÑÑÑÑÑÑÑÑÑÑ',
+       24 => 'ÑÑÑÑÑÑÑÑÑÑ',
+       27 => 'ÑÑÑÑÑÑÑÑÑ',
+       30 => 'ÑÑÑÑÑÑÑÑÑ',
+       33 => 'ÑÑÑÑÑÑÑÑÑ',
+       36 => 'ÑÑÑÑÑÑÑÑÑÑÑ',
+       39 => 'ÑÑÑÑÑÑÑÑÑÑÑÑ',
+       42 => 'ÑâÑÑÑÑÑÑÑÑÑÑ',
+       45 => 'ÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑ',
+       48 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       51 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       54 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       57 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       60 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       63 => 'ÑÑÑÑÑÑÑÑÑÑÑÑ',
+       66 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       69 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       72 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       75 => 'ÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑ',
+       78 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       81 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       84 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       87 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       90 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       93 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       96 => 'ÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       99 => 'ÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       102 => 'ÑâÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       105 => 'ÑÑÑÑÑâÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       108 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       111 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       114 => 'ÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       117 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       120 => 'ÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       123 => 'ÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       126 => 'ÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       129 => 'ÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       132 => 'ÑâÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       135 => 'ÑÑÑÑÑâÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       138 => 'ÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       141 => 'ÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       144 => 'ÑÑÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       147 => 'ÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       150 => 'ÑÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+       153 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       156 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       159 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       162 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       165 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       168 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       171 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       174 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       177 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       180 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       183 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       186 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       189 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       192 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       195 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       198 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       201 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       204 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       207 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       210 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       213 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       216 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       219 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       222 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       225 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       228 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       231 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       234 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       237 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       240 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       243 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       246 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       249 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       252 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       255 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       258 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       261 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       264 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       267 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       270 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       273 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       276 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       279 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       282 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       285 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       288 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       291 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       294 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       297 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       300 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+       303 => 'ÑÑÑÑÑÑÑÑÑÑ'
         );
 
     /**
@@ -196,16 +184,16 @@
      * @var array
      * @access private
      */
-    var $_teens = array(
-        11=>'îäèííàäöàòü',
-        12=>'äâåíàäöàòü',
-        13=>'òðèíàäöàòü',
-        14=>'÷åòûðíàäöàòü',
-        15=>'ïÿòíàäöàòü',
-        16=>'øåñòíàäöàòü',
-        17=>'ñåìíàäöàòü',
-        18=>'âîñåìíàäöàòü',
-        19=>'äåâÿòíàäöàòü'
+    private $_teens = array(
+        11=>'ÑÑÑÑÑÑÑÑÑÑÑ',
+        12=>'ÑÑÑÑÑÑÑÑÑÑ',
+        13=>'ÑâÑÑÑÑÑÑÑÑ',
+        14=>'ÑÑÑÑâÑÑÑÑÑÑÑ',
+        15=>'ÑÑÑÑÑÑÑÑÑÑ',
+        16=>'ÑÑÑÑÑÑÑÑÑÑÑ',
+        17=>'ÑÑÑÑÑÑÑÑÑÑ',
+        18=>'ÑÑÑÑÑÑÑÑÑÑÑÑ',
+        19=>'ÑÑÑÑÑÑÑÑÑÑÑÑ'
         );
 
     /**
@@ -213,15 +201,15 @@
      * @var array
      * @access private
      */
-    var $_tens = array(
-        2=>'äâàäöàòü',
-        3=>'òðèäöàòü',
-        4=>'ñîðîê',
-        5=>'ïÿòüäåñÿò',
-        6=>'øåñòüäåñÿò',
-        7=>'ñåìüäåñÿò',
-        8=>'âîñåìüäåñÿò',
-        9=>'äåâÿíîñòî'
+    private $_tens = array(
+        2=>'ÑÑÑÑÑÑÑÑ',
+        3=>'ÑâÑÑÑÑÑÑ',
+        4=>'ÑÑâÑÑ',
+        5=>'ÑÑÑÑÑÑÑÑÑ',
+        6=>'ÑÑÑÑÑÑÑÑÑÑ',
+        7=>'ÑÑÑÑÑÑÑÑÑ',
+        8=>'ÑÑÑÑÑÑÑÑÑÑÑ',
+        9=>'ÑÑÑÑÑÑÑÑÑ'
         );
 
     /**
@@ -229,16 +217,16 @@
      * @var array
      * @access private
      */
-    var $_hundreds = array(
-        1=>'ñòî',
-        2=>'äâåñòè',
-        3=>'òðèñòà',
-        4=>'÷åòûðåñòà',
-        5=>'ïÿòüñîò',
-        6=>'øåñòüñîò',
-        7=>'ñåìüñîò',
-        8=>'âîñåìüñîò',
-        9=>'äåâÿòüñîò'
+    private $_hundreds = array(
+        1=>'ÑÑÑ',
+        2=>'ÑÑÑÑÑÑ',
+        3=>'ÑâÑÑÑÑ',
+        4=>'ÑÑÑÑâÑÑÑÑ',
+        5=>'ÑÑÑÑÑÑÑ',
+        6=>'ÑÑÑÑÑÑÑÑ',
+        7=>'ÑÑÑÑÑÑÑ',
+        8=>'ÑÑÑÑÑÑÑÑÑ',
+        9=>'ÑÑÑÑÑÑÑÑÑ'
         );
 
     /**
@@ -247,10 +235,10 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
-        array('íîëü', 'îäíî', 'äâà', 'òðè', '÷åòûðå', 'ïÿòü', 'øåñòü', 'ñåìü', 'âîñåìü', 'äåâÿòü'),
-        array('íîëü', 'îäèí', 'äâà', 'òðè', '÷åòûðå', 'ïÿòü', 'øåñòü', 'ñåìü', 'âîñåìü', 'äåâÿòü'),
-        array('íîëü', 'îäíà', 'äâå', 'òðè', '÷åòûðå', 'ïÿòü', 'øåñòü', 'ñåìü', 'âîñåìü', 'äåâÿòü')
+    private $_digits = array(
+        array('ÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑ', 'ÑâÑ', 'ÑÑÑÑâÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ'),
+        array('ÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑ', 'ÑâÑ', 'ÑÑÑÑâÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ'),
+        array('ÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑ', 'ÑâÑ', 'ÑÑÑÑâÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
     );
 
     /**
@@ -258,7 +246,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The currency names (based on the below links,
@@ -270,147 +258,147 @@
      * @link http://www.cofe.ru/Finance/money.asp Currencies names
      * @access private
      */
-    var $_currency_names = array(
+    private $_currency_names = array(
       'ALL' => array(
-                array(1, 'ëåê', 'ëåêà', 'ëåêîâ'), 
-                array(2, 'êèíäàðêà', 'êèíäàðêè', 'êèíäàðîê')
+                array(1, 'ÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑ'), 
+                array(2, 'ÑÑÑÑÑâÑÑ', 'ÑÑÑÑÑâÑÑ', 'ÑÑÑÑÑâÑÑ')
                ),
       'AUD' => array(
-                array(1, 'àâñòðàëèéñêèé äîëëàð', 'àâñòðàëèéñêèõ äîëëàðà', 'àâñòðàëèéñêèõ äîëëàðîâ'),
-                array(1, 'öåíò', 'öåíòà', 'öåíòîâ')
+                array(1, 'ÑÑÑÑâÑÑÑÑÑÑÑÑ ÑÑÑÑÑâ', 'ÑÑÑÑâÑÑÑÑÑÑÑÑ ÑÑÑÑÑâÑ', 'ÑÑÑÑâÑÑÑÑÑÑÑÑ ÑÑÑÑÑâÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'BGN' => array(
-                array(1, 'ëåâ', 'ëåâà', 'ëåâîâ'), 
-                array(2, 'ñòîòèíêà', 'ñòîòèíêè', 'ñòîòèíîê')
+                array(1, 'ÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑ'), 
+                array(2, 'ÑÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑÑ')
                ),
       'BRL' => array(
-                array(1, 'áðàçèëüñêèé ðåàë', 'áðàçèëüñêèõ ðåàëà', 'áðàçèëüñêèõ ðåàëîâ'), 
-                array(1, 'ñåíòàâî', 'ñåíòàâî', 'ñåíòàâî')
+                array(1, 'ÑâÑÑÑÑÑÑÑÑÑ âÑÑÑ', 'ÑâÑÑÑÑÑÑÑÑÑ âÑÑÑÑ', 'ÑâÑÑÑÑÑÑÑÑÑ âÑÑÑÑÑ'), 
+                array(1, 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑ')
                ),
       'BYR' => array(
-                array(1, 'áåëîðóññêèé ðóáëü', 'áåëîðóññêèõ ðóáëÿ', 'áåëîðóññêèõ ðóáëåé'), 
-                array(2, 'êîïåéêà', 'êîïåéêè', 'êîïååê')
+                array(1, 'ÑÑÑÑâÑÑÑÑÑÑ âÑÑÑÑ', 'ÑÑÑÑâÑÑÑÑÑÑ âÑÑÑÑ', 'ÑÑÑÑâÑÑÑÑÑÑ âÑÑÑÑÑ'), 
+                array(2, 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'CAD' => array(
-                array(1, 'êàíàäñêèé äîëëàð', 'êàíàäñêèõ äîëëàðà', 'êàíàäñêèõ äîëëàðîâ'),
-                array(1, 'öåíò', 'öåíòà', 'öåíòîâ')
+                array(1, 'ÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑâ', 'ÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑâÑ', 'ÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑâÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'CHF' => array(
-                array(1, 'øâåéöàðñêèé ôðàíê', 'øâåéöàðñêèõ ôðàíêà', 'øâåéöàðñêèõ ôðàíêîâ'),
-                array(1, 'ñàíòèì', 'ñàíòèìà', 'ñàíòèìîâ')
+                array(1, 'ÑÑÑÑÑÑâÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑâÑÑÑÑ ÑâÑÑÑÑ', 'ÑÑÑÑÑÑâÑÑÑÑ ÑâÑÑÑÑÑ'),
+                array(1, 'ÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑÑ')
                ),
       'CYP' => array(
-                array(1, 'êèïðñêèé ôóíò', 'êèïðñêèõ ôóíòà', 'êèïðñêèõ ôóíòîâ'),
-                array(1, 'öåíò', 'öåíòà', 'öåíòîâ')
+                array(1, 'ÑÑÑâÑÑÑÑ ÑÑÑÑ', 'ÑÑÑâÑÑÑÑ ÑÑÑÑÑ', 'ÑÑÑâÑÑÑÑ ÑÑÑÑÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'CZK' => array(
-                array(2, '÷åøñêàÿ êðîíà', '÷åøñêèõ êðîíû', '÷åøñêèõ êðîí'),
-                array(1, 'ãàëèðæ', 'ãàëèðæà', 'ãàëèðæåé')
+                array(2, 'ÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑ ÑâÑÑ'),
+                array(1, 'ÑÑÑÑâÑ', 'ÑÑÑÑâÑÑ', 'ÑÑÑÑâÑÑÑ')
                ),
       'DKK' => array(
-                array(2, 'äàòñêàÿ êðîíà', 'äàòñêèõ êðîíû', 'äàòñêèõ êðîí'),
-                array(1, 'ýðå', 'ýðå', 'ýðå')
+                array(2, 'ÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑ ÑâÑÑ'),
+                array(1, 'Â§âÑ', 'Â§âÑ', 'Â§âÑ')
                ),
       'EEK' => array(
-                array(2, 'ýñòîíñêàÿ êðîíà', 'ýñòîíñêèõ êðîíû', 'ýñòîíñêèõ êðîí'),
-                array(1, 'ñåíòè', 'ñåíòè', 'ñåíòè')
+                array(2, 'Â§ÑÑÑÑÑÑÑÑ ÑâÑÑÑ', 'Â§ÑÑÑÑÑÑÑÑ ÑâÑÑÑ', 'Â§ÑÑÑÑÑÑÑÑ ÑâÑÑ'),
+                array(1, 'ÑÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑ')
                ),
       'EUR' => array(
-                array(1, 'åâðî', 'åâðî', 'åâðî'),
-                array(1, 'åâðîöåíò', 'åâðîöåíòà', 'åâðîöåíòîâ')
+                array(1, 'ÑÑâÑ', 'ÑÑâÑ', 'ÑÑâÑ'),
+                array(1, 'ÑÑâÑÑÑÑÑ', 'ÑÑâÑÑÑÑÑÑ', 'ÑÑâÑÑÑÑÑÑÑ')
                ),
       'CYP' => array(
-                array(1, 'ôóíò ñòåðëèíãîâ', 'ôóíòà ñòåðëèíãîâ', 'ôóíòîâ ñòåðëèíãîâ'),
-                array(1, 'ïåíñ', 'ïåíñà', 'ïåíñîâ')
+                array(1, 'ÑÑÑÑ ÑÑÑâÑÑÑÑÑÑ', 'ÑÑÑÑÑ ÑÑÑâÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ ÑÑÑâÑÑÑÑÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'CAD' => array(
-                array(1, 'ãîíêîíãñêèé äîëëàð', 'ãîíêîíãñêèõ äîëëàðà', 'ãîíêîíãñêèõ äîëëàðîâ'),
-                array(1, 'öåíò', 'öåíòà', 'öåíòîâ')
+                array(1, 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑâ', 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑâÑ', 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑÑâÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'HRK' => array(
-                array(2, 'õîðâàòñêàÿ êóíà', 'õîðâàòñêèõ êóíû', 'õîðâàòñêèõ êóí'),
-                array(2, 'ëèïà', 'ëèïû', 'ëèï')
+                array(2, 'ÑÑâÑÑÑÑÑÑÑ ÑÑÑÑ', 'ÑÑâÑÑÑÑÑÑÑ ÑÑÑÑ', 'ÑÑâÑÑÑÑÑÑÑ ÑÑÑ'),
+                array(2, 'ÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑ')
                ),
       'HUF' => array(
-                array(1, 'âåíãåðñêèé ôîðèíò', 'âåíãåðñêèõ ôîðèíòà', 'âåíãåðñêèõ ôîðèíòîâ'),
-                array(1, 'ôèëëåð', 'ôèëëåðà', 'ôèëëåðîâ')
+                array(1, 'ÑÑÑÑÑâÑÑÑÑ ÑÑâÑÑÑ', 'ÑÑÑÑÑâÑÑÑÑ ÑÑâÑÑÑÑ', 'ÑÑÑÑÑâÑÑÑÑ ÑÑâÑÑÑÑÑ'),
+                array(1, 'ÑÑÑÑÑâ', 'ÑÑÑÑÑâÑ', 'ÑÑÑÑÑâÑÑ')
                ),
       'ISK' => array(
-                array(2, 'èñëàíäñêàÿ êðîíà', 'èñëàíäñêèõ êðîíû', 'èñëàíäñêèõ êðîí'),
-                array(1, 'ýðå', 'ýðå', 'ýðå')
+                array(2, 'ÑÑÑÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑÑÑÑ ÑâÑÑ'),
+                array(1, 'Â§âÑ', 'Â§âÑ', 'Â§âÑ')
                ),
       'JPY' => array(
-                array(2, 'èåíà', 'èåíû', 'èåí'),
-                array(2, 'ñåíà', 'ñåíû', 'ñåí')
+                array(2, 'ÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑ'),
+                array(2, 'ÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑ')
                ),
       'LTL' => array(
-                array(1, 'ëèò', 'ëèòà', 'ëèòîâ'),
-                array(1, 'öåíò', 'öåíòà', 'öåíòîâ')
+                array(1, 'ÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'LVL' => array(
-                array(1, 'ëàò', 'ëàòà', 'ëàòîâ'),
-                array(1, 'ñåíòèì', 'ñåíòèìà', 'ñåíòèìîâ')
+                array(1, 'ÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑÑÑ'),
+                array(1, 'ÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑÑ')
                ),
       'MKD' => array(
-                array(1, 'ìàêåäîíñêèé äèíàð', 'ìàêåäîíñêèõ äèíàðà', 'ìàêåäîíñêèõ äèíàðîâ'),
-                array(1, 'äåíè', 'äåíè', 'äåíè')
+                array(1, 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑâ', 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑâÑ', 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑâÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑÑ')
                ),
       'MTL' => array(
-                array(2, 'ìàëüòèéñêàÿ ëèðà', 'ìàëüòèéñêèõ ëèðû', 'ìàëüòèéñêèõ ëèð'),
-                array(1, 'ñåíòèì', 'ñåíòèìà', 'ñåíòèìîâ')
+                array(2, 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑâÑ', 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑâÑ', 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑâ'),
+                array(1, 'ÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑÑ')
                ),
       'NOK' => array(
-                array(2, 'íîðâåæñêàÿ êðîíà', 'íîðâåæñêèõ êðîíû', 'íîðâåæñêèõ êðîí'),
-                array(0, 'ýðå', 'ýðå', 'ýðå')
+                array(2, 'ÑÑâÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑâÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑâÑÑÑÑÑÑÑ ÑâÑÑ'),
+                array(0, 'Â§âÑ', 'Â§âÑ', 'Â§âÑ')
                ),
       'PLN' => array(
-                array(1, 'çëîòûé', 'çëîòûõ', 'çëîòûõ'),
-                array(1, 'ãðîø', 'ãðîøà', 'ãðîøåé')
+                array(1, 'ÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ'),
+                array(1, 'ÑâÑÑ', 'ÑâÑÑÑ', 'ÑâÑÑÑÑ')
                ),
       'ROL' => array(
-                array(1, 'ðóìûíñêèé ëåé', 'ðóìûíñêèõ ëåé', 'ðóìûíñêèõ ëåé'),
-                array(1, 'áàíè', 'áàíè', 'áàíè')
+                array(1, 'âÑÑÑÑÑÑÑÑ ÑÑÑ', 'âÑÑÑÑÑÑÑÑ ÑÑÑ', 'âÑÑÑÑÑÑÑÑ ÑÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑ', 'ÑÑÑÑ')
                ),
        // both RUR and RUR are used, I use RUB for shorter form
       'RUB' => array(
-                array(1, 'ðóáëü', 'ðóáëÿ', 'ðóáëåé'),
-                array(2, 'êîïåéêà', 'êîïåéêè', 'êîïååê')
+                array(1, 'âÑÑÑÑ', 'âÑÑÑÑ', 'âÑÑÑÑÑ'),
+                array(2, 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'RUR' => array(
-                array(1, 'ðîññèéñêèé ðóáëü', 'ðîññèéñêèõ ðóáëÿ', 'ðîññèéñêèõ ðóáëåé'),
-                array(2, 'êîïåéêà', 'êîïåéêè', 'êîïååê')
+                array(1, 'âÑÑÑÑÑÑÑÑÑ âÑÑÑÑ', 'âÑÑÑÑÑÑÑÑÑ âÑÑÑÑ', 'âÑÑÑÑÑÑÑÑÑ âÑÑÑÑÑ'),
+                array(2, 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'SEK' => array(
-                array(2, 'øâåäñêàÿ êðîíà', 'øâåäñêèõ êðîíû', 'øâåäñêèõ êðîí'),
-                array(1, 'ýðå', 'ýðå', 'ýðå')
+                array(2, 'ÑÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑÑ ÑâÑÑ'),
+                array(1, 'Â§âÑ', 'Â§âÑ', 'Â§âÑ')
                ),
       'SIT' => array(
-                array(1, 'ñëîâåíñêèé òîëàð', 'ñëîâåíñêèõ òîëàðà', 'ñëîâåíñêèõ òîëàðîâ'),
-                array(2, 'ñòîòèíà', 'ñòîòèíû', 'ñòîòèí')
+                array(1, 'ÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑâ', 'ÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑâÑ', 'ÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑâÑÑ'),
+                array(2, 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'SKK' => array(
-                array(2, 'ñëîâàöêàÿ êðîíà', 'ñëîâàöêèõ êðîíû', 'ñëîâàöêèõ êðîí'),
+                array(2, 'ÑÑÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑÑÑ ÑâÑÑÑ', 'ÑÑÑÑÑÑÑÑÑ ÑâÑÑ'),
                 array(0, '', '', '')
                ),
       'TRL' => array(
-                array(2, 'òóðåöêàÿ ëèðà', 'òóðåöêèõ ëèðû', 'òóðåöêèõ ëèð'),
-                array(1, 'ïèàñòð', 'ïèàñòðà', 'ïèàñòðîâ')
+                array(2, 'ÑÑâÑÑÑÑÑ ÑÑâÑ', 'ÑÑâÑÑÑÑÑ ÑÑâÑ', 'ÑÑâÑÑÑÑÑ ÑÑâ'),
+                array(1, 'ÑÑÑÑÑâ', 'ÑÑÑÑÑâÑ', 'ÑÑÑÑÑâÑÑ')
                ),
       'UAH' => array(
-                array(2, 'ãðèâíà', 'ãðèâíû', 'ãðèâåí'),
-                array(1, 'öåíò', 'öåíòà', 'öåíòîâ')
+                array(2, 'ÑâÑÑÑÑ', 'ÑâÑÑÑÑ', 'ÑâÑÑÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'USD' => array(
-                array(1, 'äîëëàð ÑØÀ', 'äîëëàðà ÑØÀ', 'äîëëàðîâ ÑØÀ'),
-                array(1, 'öåíò', 'öåíòà', 'öåíòîâ')
+                array(1, 'ÑÑÑÑÑâ Ð±Ð¸Ð ', 'ÑÑÑÑÑâÑ Ð±Ð¸Ð ', 'ÑÑÑÑÑâÑÑ Ð±Ð¸Ð '),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                ),
       'YUM' => array(
-                array(1, 'þãîñëàâñêèé äèíàð', 'þãîñëàâñêèõ äèíàðà', 'þãîñëàâñêèõ äèíàðîâ'),
-                array(1, 'ïàðà', 'ïàðà', 'ïàðà')
+                array(1, 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑâ', 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑâÑ', 'ÑÑÑÑÑÑÑÑÑÑÑ ÑÑÑÑâÑÑ'),
+                array(1, 'ÑÑâÑ', 'ÑÑâÑ', 'ÑÑâÑ')
                ),
       'ZAR' => array(
-                array(1, 'ðàíä', 'ðàíäà', 'ðàíäîâ'),
-                array(1, 'öåíò', 'öåíòà', 'öåíòîâ')
+                array(1, 'âÑÑÑ', 'âÑÑÑÑ', 'âÑÑÑÑÑ'),
+                array(1, 'ÑÑÑÑ', 'ÑÑÑÑÑ', 'ÑÑÑÑÑÑ')
                )
     );
 
@@ -419,7 +407,7 @@
      * @var string
      * @access public
      */
-    var $def_currency = 'RUB'; // Russian rouble
+    public $def_currency = 'RUB'; // Russian rouble
 
     // }}}
     // {{{ toWords()
@@ -438,7 +426,7 @@
      * @access private
      * @author Andrey Demenev <demenev@on-line.jar.ru>
      */
-    function toWords($num, $gender = 1) 
+    public function toWords($num, $gender = 1) 
     {
         return $this->_toWordsWithCase($num, $dummy, $gender);
     }
@@ -459,7 +447,7 @@
      * @access private
      * @author Andrey Demenev <demenev@on-line.jar.ru>
      */
-    function _toWordsWithCase($num, &$case, $gender = 1)
+    private function _toWordsWithCase($num, &$case, $gender = 1)
     {
         $ret  = '';
         $case = 3;
@@ -497,18 +485,18 @@
 
                 if ($power == 3) {
                     if ($_case == 1) {
-                        $group .= $this->_sep . 'òûñÿ÷à';
+                        $group .= $this->_sep . 'ÑÑÑÑÑÑ';
                     } elseif ($_case == 2) {
-                        $group .= $this->_sep . 'òûñÿ÷è';
+                        $group .= $this->_sep . 'ÑÑÑÑÑÑ';
                     } else {
-                        $group .= $this->_sep . 'òûñÿ÷';
+                        $group .= $this->_sep . 'ÑÑÑÑÑ';
                     }
                 } elseif ($group && $power>3 && isset($this->_exponent[$power])) {
                     $group .= $this->_sep . $this->_exponent[$power];
                     if ($_case == 2) {
-                        $group .= 'à';
+                        $group .= 'Ñ';
                     } elseif ($_case == 3) {
-                        $group .= 'îâ';
+                        $group .= 'ÑÑ';
                     }
                 }
 
@@ -541,7 +529,7 @@
      * @access private
      * @author Andrey Demenev <demenev@on-line.jar.ru>
      */
-    function _groupToWords($num, $gender, &$case)
+    private function _groupToWords($num, $gender, &$case)
     {
         $ret  = '';        
         $case = 3;
@@ -575,7 +563,7 @@
             $ones = (int)$num{2};
             if ($tens || $ones) {
                 if ($tens == 1 && $ones == 0) {
-                    $ret .= 'äåñÿòü';
+                    $ret .= 'ÑÑÑÑÑÑ';
                 } elseif ($tens == 1) {
                     $ret .= $this->_teens[$ones+10];
                 } else {
@@ -621,7 +609,7 @@
      * @access public
      * @author Andrey Demenev <demenev@on-line.jar.ru>
      */
-    function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
+    public function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
     {
         $int_curr = strtoupper($int_curr);
         if (!isset($this->_currency_names[$int_curr])) {
@@ -647,5 +635,3 @@
     // }}}
 
 }
-
-?>
Index: Numbers/Words/lang.de.php
===================================================================
--- Numbers/Words/lang.de.php	(wersja 33074)
+++ Numbers/Words/lang.de.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -23,18 +23,6 @@
  */
 
 /**
- *
- * Class for translating numbers into German.
- * @author Piotr Klaban
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
  * Class for translating numbers into German.
  *
  * @category Numbers
@@ -43,7 +31,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_de extends Numbers_Words
+class Numbers_Words_de
 {
 
     // {{{ properties
@@ -53,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'de';
+    public $locale = 'de';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'German';
+    public $lang = 'German';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Deutsch';
+    public $lang_native = 'Deutsch';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'Minus'; // minus sign
+    private $_minus = 'Minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
@@ -84,7 +72,7 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('tausend','tausend'),
         6 => array('Million','Millionen'),
@@ -118,9 +106,9 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'null', 'ein', 'zwei', 'drei', 'vier',
-        'fünf', 'sechs', 'sieben', 'acht', 'neun'
+        'fÃ¼nf', 'sechs', 'sieben', 'acht', 'neun'
     );
 
     /**
@@ -128,14 +116,14 @@
      * @var string
      * @access private
      */
-    var $_sep = '';
+    private $_sep = '';
 
     /**
      * The exponent word separator
      * @var string
      * @access private
      */
-    var $_sep2 = ' ';
+    private $_sep2 = ' ';
 
     // }}}
     // {{{ toWords()
@@ -157,7 +145,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -261,7 +249,7 @@
             break;
 
         case 3:
-            $ret .= $this->_sep . 'dreißig';
+            $ret .= $this->_sep . 'dreiÃig';
             break;
 
         case 2:
@@ -279,7 +267,7 @@
                 break;
 
             case 2:
-                $ret .= $this->_sep . 'zwölf';
+                $ret .= $this->_sep . 'zwÃ¶lf';
                 break;
 
             case 3:
@@ -327,5 +315,3 @@
     }
     // }}}
 }
-
-?>
Index: Numbers/Words/lang.bg.php
===================================================================
--- Numbers/Words/lang.bg.php	(wersja 33074)
+++ Numbers/Words/lang.bg.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -23,11 +23,6 @@
  */
 
 /**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
  * Class for translating numbers into Bulgarian.
  *
  * @category Numbers
@@ -36,7 +31,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_bg extends Numbers_Words
+class Numbers_Words_bg
 {
 
     // {{{ properties
@@ -46,35 +41,35 @@
      * @var string
      * @access public
      */
-    var $locale = 'bg';
+    public $locale = 'bg';
 
     /**
      * Language name in English.
      * @var string
      * @access public
      */
-    var $lang = 'Bulgarian';
+    public $lang = 'Bulgarian';
 
     /**
      * Native language name.
      * @var string
      * @access public
      */
-    var $lang_native = 'Áúëãàðñêè';
+    public $lang_native = 'Ð¡ÑÑÑÑâÑÑÑ';
 
     /**
      * Some miscellaneous words and language constructs.
      * @var string
      * @access private
      */
-    var $_misc_strings = array(
-        'deset'=>'äåñåò',           // "ten"
-        'edinadeset'=>'åäèíàäåñåò', // "eleven"
-        'na'=>'íà',                 // liaison particle for 12 to 19
-        'sto'=>'ñòî',               // "hundred"
-        'sta'=>'ñòà',               // suffix for 2 and 3 hundred
-        'stotin'=>'ñòîòèí',         // suffix for 4 to 9 hundred
-        'hiliadi'=>'õèëÿäè'         // plural form of "thousand"
+    private $_misc_strings = array(
+        'deset'=>'ÑÑÑÑÑ',           // "ten"
+        'edinadeset'=>'ÑÑÑÑÑÑÑÑÑÑ', // "eleven"
+        'na'=>'ÑÑ',                 // liaison particle for 12 to 19
+        'sto'=>'ÑÑÑ',               // "hundred"
+        'sta'=>'ÑÑÑ',               // suffix for 2 and 3 hundred
+        'stotin'=>'ÑÑÑÑÑÑ',         // suffix for 4 to 9 hundred
+        'hiliadi'=>'ÑÑÑÑÑÑ'         // plural form of "thousand"
     );
 
 
@@ -85,10 +80,10 @@
      * @var string
      * @access private
      */
-    var $_digits = array(
-        0=>array(1=>"åäíî", "äâå", "òðè", "÷åòèðè", "ïåò", "øåñò", "ñåäåì", "îñåì", "äåâåò"), // neuter
-        1=>array(1=>'åäèí', 'äâà'),                                                           // masculine
-       -1=>array(1=>'åäíà')                                                                   // feminine
+    private $_digits = array(
+        0=>array(1=>"ÑÑÑÑ", "ÑÑÑ", "ÑâÑ", "ÑÑÑÑâÑ", "ÑÑÑ", "ÑÑÑÑ", "ÑÑÑÑÑ", "ÑÑÑÑ", "ÑÑÑÑÑ"), // neuter
+        1=>array(1=>'ÑÑÑÑ', 'ÑÑÑ'),                                                           // masculine
+       -1=>array(1=>'ÑÑÑÑ')                                                                   // feminine
     );
 
     /**
@@ -96,165 +91,165 @@
      * @var string
      * @access private
      */
-    var $_digits_initialized = false;
+    private $_digits_initialized = false;
 
     /**
      * A flag, that determines if the "and" word is placed already before the last non-empty group of digits.
      * @var string
      * @access private
      */
-    var $_last_and = false;
+    private $_last_and = false;
 
     /**
      * The word for zero.
      * @var string
      * @access private
      */
-    var $_zero = 'íóëà';
+    private $_zero = 'ÑÑÑÑ';
 
     /**
      * The word for infinity.
      * @var string
      * @access private
      */
-    var $_infinity = 'áåçêðàéíîñò';
+    private $_infinity = 'ÑÑÑÑâÑÑÑÑÑÑ';
 
     /**
      * The word for the "and" language construct.
      * @var string
      * @access private
      */
-    var $_and = 'è';
+    private $_and = 'Ñ';
     
     /**
      * The word separator.
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The word for the minus sign.
      * @var string
      * @access private
      */
-    var $_minus = 'ìèíóñ'; // minus sign
+    private $_minus = 'ÑÑÑÑÑ'; // minus sign
 
     /**
      * The plural suffix (except for thousand).
      * @var string
      * @access private
      */
-    var $_plural = 'à'; // plural suffix
+    private $_plural = 'Ñ'; // plural suffix
 
     /**
      * The suffixes for exponents (singular).
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
           0 => '',
-          3 => 'õèëÿäà',
-          6 => 'ìèëèîí',
-          9 => 'ìèëèàðä',
-         12 => 'òðèëèîí',
-         15 => 'êâàäðèëèîí',
-         18 => 'êâèíòèëèîí',
-         21 => 'ñåêñòèëèîí',
-         24 => 'ñåïòèëèîí',
-         27 => 'îêòèëèîí',
-         30 => 'íîíàëèîí',
-         33 => 'äåêàëèîí',
-         36 => 'óíäåêàëèîí',
-         39 => 'äóîäåêàëèîí',
-         42 => 'òðåäåêàëèîí',
-         45 => 'êâàòîðäåêàëèîí',
-         48 => 'êâèíòäåêàëèîí',
-         51 => 'ñåêñäåêàëèîí',
-         54 => 'ñåïòäåêàëèîí',
-         57 => 'îêòîäåêàëèîí',
-         60 => 'íîâåìäåêàëèîí',
-         63 => 'âèãèíòèëèîí',
-         66 => 'óíâèãèíòèëèîí',
-         69 => 'äóîâèãèíòèëèîí',
-         72 => 'òðåâèãèíòèëèîí',
-         75 => 'êâàòîðâèãèíòèëèîí',
-         78 => 'êâèíâèãèíòèëèîí',
-         81 => 'ñåêñâèãèíòèëèîí',
-         84 => 'ñåïòåíâèãèíòèëèîí',
-         87 => 'îêòîâèãèíòèëèîí',
-         90 => 'íîâåìâèãèíòèëèîí',
-         93 => 'òðèãèíòèëèîí',
-         96 => 'óíòðèãèíòèëèîí',
-         99 => 'äóîòðèãèíòèëèîí',
-        102 => 'òðåòðèãèíòèëèîí',
-        105 => 'êâàòîðòðèãèíòèëèîí',
-        108 => 'êâèíòðèãèíòèëèîí',
-        111 => 'ñåêñòðèãèíòèëèîí',
-        114 => 'ñåïòåíòðèãèíòèëèîí',
-        117 => 'îêòîòðèãèíòèëèîí',
-        120 => 'íîâåìòðèãèíòèëèîí',
-        123 => 'êâàäðàãèíòèëèîí',
-        126 => 'óíêâàäðàãèíòèëèîí',
-        129 => 'äóîêâàäðàãèíòèëèîí',
-        132 => 'òðåêâàäðàãèíòèëèîí',
-        135 => 'êâàòîðêâàäðàãèíòèëèîí',
-        138 => 'êâèíêâàäðàãèíòèëèîí',
-        141 => 'ñåêñêâàäðàãèíòèëèîí',
-        144 => 'ñåïòåíêâàäðàãèíòèëèîí',
-        147 => 'îêòîêâàäðàãèíòèëèîí',
-        150 => 'íîâåìêâàäðàãèíòèëèîí',
-        153 => 'êâèíêâàãèíòèëèîí',
-        156 => 'óíêâèíêàãèíòèëèîí',
-        159 => 'äóîêâèíêàãèíòèëèîí',
-        162 => 'òðåêâèíêàãèíòèëèîí',
-        165 => 'êâàòîðêâèíêàãèíòèëèîí',
-        168 => 'êâèíêâèíêàãèíòèëèîí',
-        171 => 'ñåêñêâèíêàãèíòèëèîí',
-        174 => 'ñåïòåíêâèíêàãèíòèëèîí',
-        177 => 'îêòîêâèíêàãèíòèëèîí',
-        180 => 'íîâåìêâèíêàãèíòèëèîí',
-        183 => 'ñåêñàãèíòèëèîí',
-        186 => 'óíñåêñàãèíòèëèîí',
-        189 => 'äóîñåêñàãèíòèëèîí',
-        192 => 'òðåñåêñàãèíòèëèîí',
-        195 => 'êâàòîðñåêñàãèíòèëèîí',
-        198 => 'êâèíñåêñàãèíòèëèîí',
-        201 => 'ñåêññåêñàãèíòèëèîí',
-        204 => 'ñåïòåíñåêñàãèíòèëèîí',
-        207 => 'îêòîñåêñàãèíòèëèîí',
-        210 => 'íîâåìñåêñàãèíòèëèîí',
-        213 => 'ñåïòàãèíòèëèîí',
-        216 => 'óíñåïòàãèíòèëèîí',
-        219 => 'äóîñåïòàãèíòèëèîí',
-        222 => 'òðåñåïòàãèíòèëèîí',
-        225 => 'êâàòîðñåïòàãèíòèëèîí',
-        228 => 'êâèíñåïòàãèíòèëèîí',
-        231 => 'ñåêññåïòàãèíòèëèîí',
-        234 => 'ñåïòåíñåïòàãèíòèëèîí',
-        237 => 'îêòîñåïòàãèíòèëèîí',
-        240 => 'íîâåìñåïòàãèíòèëèîí',
-        243 => 'îêòîãèíòèëèîí',
-        246 => 'óíîêòîãèíòèëèîí',
-        249 => 'äóîîêòîãèíòèëèîí',
-        252 => 'òðåîêòîãèíòèëèîí',
-        255 => 'êâàòîðîêòîãèíòèëèîí',
-        258 => 'êâèíîêòîãèíòèëèîí',
-        261 => 'ñåêñîêòîãèíòèëèîí',
-        264 => 'ñåïòîêòîãèíòèëèîí',
-        267 => 'îêòîîêòîãèíòèëèîí',
-        270 => 'íîâåìîêòîãèíòèëèîí',
-        273 => 'íîíàãèíòèëèîí',
-        276 => 'óííîíàãèíòèëèîí',
-        279 => 'äóîíîíàãèíòèëèîí',
-        282 => 'òðåíîíàãèíòèëèîí',
-        285 => 'êâàòîðíîíàãèíòèëèîí',
-        288 => 'êâèííîíàãèíòèëèîí',
-        291 => 'ñåêñíîíàãèíòèëèîí',
-        294 => 'ñåïòåííîíàãèíòèëèîí',
-        297 => 'îêòîíîíàãèíòèëèîí',
-        300 => 'íîâåìíîíàãèíòèëèîí',
-        303 => 'öåíòèëèîí'
+          3 => 'ÑÑÑÑÑÑ',
+          6 => 'ÑÑÑÑÑÑ',
+          9 => 'ÑÑÑÑÑâÑ',
+         12 => 'ÑâÑÑÑÑÑ',
+         15 => 'ÑÑÑÑâÑÑÑÑÑ',
+         18 => 'ÑÑÑÑÑÑÑÑÑÑ',
+         21 => 'ÑÑÑÑÑÑÑÑÑÑ',
+         24 => 'ÑÑÑÑÑÑÑÑÑ',
+         27 => 'ÑÑÑÑÑÑÑÑ',
+         30 => 'ÑÑÑÑÑÑÑÑ',
+         33 => 'ÑÑÑÑÑÑÑÑ',
+         36 => 'ÑÑÑÑÑÑÑÑÑÑ',
+         39 => 'ÑÑÑÑÑÑÑÑÑÑÑ',
+         42 => 'ÑâÑÑÑÑÑÑÑÑÑ',
+         45 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑ',
+         48 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+         51 => 'ÑÑÑÑÑÑÑÑÑÑÑÑ',
+         54 => 'ÑÑÑÑÑÑÑÑÑÑÑÑ',
+         57 => 'ÑÑÑÑÑÑÑÑÑÑÑÑ',
+         60 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+         63 => 'ÑÑÑÑÑÑÑÑÑÑÑ',
+         66 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+         69 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+         72 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑ',
+         75 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑ',
+         78 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+         81 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+         84 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+         87 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+         90 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+         93 => 'ÑâÑÑÑÑÑÑÑÑÑÑ',
+         96 => 'ÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+         99 => 'ÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        102 => 'ÑâÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        105 => 'ÑÑÑÑÑâÑâÑÑÑÑÑÑÑÑÑÑ',
+        108 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        111 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        114 => 'ÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        117 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        120 => 'ÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        123 => 'ÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        126 => 'ÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        129 => 'ÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        132 => 'ÑâÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        135 => 'ÑÑÑÑÑâÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        138 => 'ÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        141 => 'ÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        144 => 'ÑÑÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        147 => 'ÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        150 => 'ÑÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑ',
+        153 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        156 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        159 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        162 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        165 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        168 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        171 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        174 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        177 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        180 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        183 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        186 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        189 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        192 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        195 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        198 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        201 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        204 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        207 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        210 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        213 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        216 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        219 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        222 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        225 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        228 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        231 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        234 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        237 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        240 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        243 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        246 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        249 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        252 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        255 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        258 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        261 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        264 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        267 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        270 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        273 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        276 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        279 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        282 => 'ÑâÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        285 => 'ÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        288 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        291 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        294 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        297 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        300 => 'ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ',
+        303 => 'ÑÑÑÑÑÑÑÑÑ'
     );
     // }}}
 
@@ -269,7 +264,7 @@
      * @author Kouber Saparev <kouber@php.net>
      * @see function _initDigits
      */
-    function Numbers_Words_bg()
+    public function __construct()
     {
         $this->_initDigits();
     }
@@ -286,7 +281,7 @@
      * @access private
      * @author Kouber Saparev <kouber@php.net>
      */
-    function _initDigits()
+    private function _initDigits()
     {
         if (!$this->_digits_initialized) {
             for ($i=3; $i<=9; $i++) {
@@ -314,7 +309,7 @@
      * @author Kouber Saparev <kouber@php.net>
      * @since  PHP 4.2.3
      */
-    function _splitNumber($num)
+    private function _splitNumber($num)
     {
         if (is_string($num)) {
             $ret = array();
@@ -355,7 +350,7 @@
      * @access private
      * @author Kouber Saparev <kouber@php.net>
      */
-    function _showDigitsGroup($num, $gender = 0, $last = false)
+    private function _showDigitsGroup($num, $gender = 0, $last = false)
     {
         /* A storage array for the return string.
              Positions 1, 3, 5 are intended for digit words
@@ -448,7 +443,7 @@
      * @access public
      * @author Kouber Saparev <kouber@php.net>
      */
-    function toWords($num = 0)
+    public function toWords($num = 0)
     {
         $ret = array();
 
@@ -517,4 +512,3 @@
     }
     // }}}
 }
-?>
Index: Numbers/Words/lang.sv.php
===================================================================
--- Numbers/Words/lang.sv.php	(wersja 33074)
+++ Numbers/Words/lang.sv.php	(kopia robocza)
@@ -23,19 +23,6 @@
  * @link     http://pear.php.net/package/Numbers_Words
  */
 
-
-/**
- *
- * Class for translating numbers into Swedish.
- * @author Robin Ericsson
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
 /**
  * Class for translating numbers into Swedish.
  *
@@ -46,7 +33,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_sv extends Numbers_Words
+class Numbers_Words_sv
 {
 
     // {{{ properties
@@ -56,35 +43,35 @@
      * @var string
      * @access public
      */
-    var $locale = 'sv';
+    public $locale = 'sv';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Swedish';
+    public $lang = 'Swedish';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Svenska';
+    public $lang_native = 'Svenska';
     
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'Minus'; // minus sign
+    private $_minus = 'Minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('tusen', 'tusen'),
         6 => array('miljon','miljoner'),
@@ -118,9 +105,9 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
-        0 => 'noll', 'ett', 'två', 'tre', 'fyra',
-        'fem', 'sex', 'sju', 'åtta', 'nio'
+    private $_digits = array(
+        0 => 'noll', 'ett', 'tvÃ¥', 'tre', 'fyra',
+        'fem', 'sex', 'sju', 'Ã¥tta', 'nio'
     );
 
     /**
@@ -128,14 +115,14 @@
      * @var string
      * @access private
      */
-    var $_sep = '';
+    private $_sep = '';
     
     /**
      * The exponent word separator
      * @var string
      * @access private
      */
-    var $_sep2 = ' ';
+    private $_sep2 = ' ';
 
     // }}}
     // {{{ toWords()
@@ -158,7 +145,7 @@
      * @author Robin Ericsson <lobbin@localhost.nu>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';        
         
@@ -241,7 +228,7 @@
             break;
     
         case 8:
-            $ret .= $this->_sep . 'åttio';
+            $ret .= $this->_sep . 'Ã¥ttio';
             break;
     
         case 4:
@@ -321,5 +308,3 @@
     }
     // }}}
 }
-
-?>
Index: Numbers/Words/lang.es_AR.php
===================================================================
--- Numbers/Words/lang.es_AR.php	(wersja 33074)
+++ Numbers/Words/lang.es_AR.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,18 +25,6 @@
 
 /**
  * Class for translating numbers into Argentinian Spanish.
- *
- * @author Martin Marrese
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Argentinian Spanish.
  * It supports up to decallones (10^6).
  * It doesn't support spanish tonic accents (acentos).
  *
@@ -47,7 +35,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_es_AR extends Numbers_Words
+class Numbers_Words_es_AR
 {
     // {{{ properties
 
@@ -56,54 +44,54 @@
      * @var string
      * @access public
      */
-    var $locale = 'es_AR';
+    public $locale = 'es_AR';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Spanish';
+    public $lang = 'Spanish';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Español';
+    public $lang_native = 'EspaÃ±ol';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'menos';
+    private $_minus = 'menos';
 
     /**
      * The sufixes for exponents (singular and plural)
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array('',''),
         3 => array('mil','mil'),
-        6 => array('millón','millones'),
-       12 => array('billón','billones'),
-       18 => array('trilón','trillones'),
-       24 => array('cuatrillón','cuatrillones'),
-       30 => array('quintillón','quintillones'),
-       36 => array('sextillón','sextillones'),
-       42 => array('septillón','septillones'),
-       48 => array('octallón','octallones'),
-       54 => array('nonallón','nonallones'),
-       60 => array('decallón','decallones'),
+        6 => array('millÃ³n','millones'),
+       12 => array('billÃ³n','billones'),
+       18 => array('trilÃ³n','trillones'),
+       24 => array('cuatrillÃ³n','cuatrillones'),
+       30 => array('quintillÃ³n','quintillones'),
+       36 => array('sextillÃ³n','sextillones'),
+       42 => array('septillÃ³n','septillones'),
+       48 => array('octallÃ³n','octallones'),
+       54 => array('nonallÃ³n','nonallones'),
+       60 => array('decallÃ³n','decallones'),
         );
     /**
      * The array containing the digits (indexed by the digits themselves).
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'cero', 'uno', 'dos', 'tres', 'cuatro',
         'cinco', 'seis', 'siete', 'ocho', 'nueve'
         );
@@ -112,7 +100,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The currency names (based on the below links,
@@ -124,7 +112,7 @@
      * @link http://www.shoestring.co.kr/world/p.visa/change.htm Currency names in English
      * @access private
      */
-    var $_currency_names = array(
+    private $_currency_names = array(
       'ALL' => array(array('lek'), array('qindarka')),
       'AUD' => array(array('Australian dollar'), array('cent')),
       'ARS' => array(array('Peso'), array ('centavo')),
@@ -144,7 +132,7 @@
       'HRK' => array(array('Croatian kuna'), array('lipa')),
       'HUF' => array(array('forint'), array('filler')),
       'ILS' => array(array('new sheqel','new sheqels'), array('agora','agorot')),
-      'ISK' => array(array('Icelandic króna'), array('aurar')),
+      'ISK' => array(array('Icelandic krÃ³na'), array('aurar')),
       'JPY' => array(array('yen'), array('sen')),
       'LTL' => array(array('litas'), array('cent')),
       'LVL' => array(array('lat'), array('sentim')),
@@ -157,7 +145,7 @@
       'SEK' => array(array('Swedish krona'), array('oere')),
       'SIT' => array(array('Tolar'), array('stotinia')),
       'SKK' => array(array('Slovak koruna'), array()),
-      'TRL' => array(array('lira'), array('kuruþ')),
+      'TRL' => array(array('lira'), array('kuruÃ¾')),
       'UAH' => array(array('hryvna'), array('cent')),
       'USD' => array(array('dollar'), array('cent')),
       'YUM' => array(array('dinars'), array('para')),
@@ -169,7 +157,7 @@
      * @var string
      * @access public
      */
-    var $def_currency = 'ARS'; // Argentinian Peso
+    public $def_currency = 'ARS'; // Argentinian Peso
 
     // }}}
     // {{{ toWords()
@@ -188,7 +176,7 @@
      * @access private
      * @author Martin Marrese
      */
-    function toWords($num, $power = 0)
+    public function toWords($num, $power = 0)
     {
         // The return string;
         $ret = '';
@@ -306,7 +294,7 @@
                 $ret .= $this->_sep . 'veinte';
             } else {
                 if (($power > 0) and ($d == 1)) {
-                    $ret .= $this->_sep . 'veintiún';
+                    $ret .= $this->_sep . 'veintiÃºn';
                 } else {
                     $ret .= $this->_sep . 'veinti' . $this->_digits[$d];
                 }
@@ -417,7 +405,7 @@
      * @access public
      * @author Martin Marrese
      */
-    function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
+    public function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
     {
         $int_curr = strtoupper($int_curr);
         if (!isset($this->_currency_names[$int_curr])) {
@@ -466,4 +454,3 @@
 
 
 }
-?>
Index: Numbers/Words/lang.he.php
===================================================================
--- Numbers/Words/lang.he.php	(wersja 33074)
+++ Numbers/Words/lang.he.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,25 +25,13 @@
 /**
  * Class for translating numbers into Hebrew.
  *
- * @author Hadar Porat
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Hebrew.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Hadar Porat <hpman28@gmail.com>
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_he extends Numbers_Words
+class Numbers_Words_he
 {
 
     // {{{ properties
@@ -53,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'he';
+    public $locale = 'he';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Hebrew';
+    public $lang = 'Hebrew';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = '×¢××¨××ª';
+    public $lang_native = '×¢××¨××ª';
     
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'minus'; // minus sign
+    private $_minus = 'minus'; // minus sign
     
     /**
      * The sufixes for exponents (singular and plural)
@@ -85,7 +73,7 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('×××¤××'),
         6 => array('××××××'),
@@ -207,22 +195,22 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => '××¤×¡', '×××', '×©× ×××', '×©×××©×', '××¨××¢×',
         '××××©×', '×©××©×', '×©××¢×', '×©××× ×', '×ª×©×¢×'
     );
     
-    var $_digits_ten = array(
+    private $_digits_ten = array(
         2 => '×¢×©×¨××', '×©×××©××', '××¨××¢××', '××××©××',
         '×©××©××', '×©××¢××', '×©××× ××', '×ª×©×¢××'
     );
     
-    var $_digits_female = array(
+    private $_digits_female = array(
         0 => '××¤×¡', '×××ª', '×©×ª×××', '×©×××©', '××¨××¢',
         '×××©', '×©×©', '×©××¢', '×©××× ×', '×ª×©×¢'
     );     
     
-    var $digits_hundreds = array(
+    private $digits_hundreds = array(
         0 => '', '×××', '×©× ×-××××ª', '×©×××©-××××ª', '××¨××¢-××××ª',
         '×××©-××××ª', '×©×©-××××ª', '×©××¢-××××ª', '×©××× ×-××××ª', '×ª×©×¢-××××ª'
     );         
@@ -232,11 +220,11 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
-    var $_sep_hundred = '-';
+    private $_sep_hundred = '-';
 
-    var $_sep_ten = ' ×';
+    private $_sep_ten = ' ×';
 
     /**
      * The currency names (based on the below links,
@@ -248,7 +236,7 @@
      * @link http://www.shoestring.co.kr/world/p.visa/change.htm Currency names in English
      * @access private
      */
-    var $_currency_names = array(
+    private $_currency_names = array(
       'ALL' => array(array('lek'), array('qindarka')),
       'AUD' => array(array('Australian dollar'), array('cent')),
       'BAM' => array(array('convertible marka'), array('fenig')),
@@ -293,7 +281,7 @@
      * @var string
      * @access public
      */
-    var $def_currency = 'NIS';
+    public $def_currency = 'NIS';
 
     // }}}
     // {{{ toWords()
@@ -314,7 +302,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';        
       
@@ -478,7 +466,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  Numbers_Words 0.4
      */
-    function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
+    public function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
     {
         $int_curr = strtoupper($int_curr);
         if (!isset($this->_currency_names[$int_curr])) {
@@ -521,5 +509,3 @@
     // }}}
 
 }
-
-?>
Index: Numbers/Words/lang.id.php
===================================================================
--- Numbers/Words/lang.id.php	(wersja 33074)
+++ Numbers/Words/lang.id.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -23,9 +23,6 @@
  * @link     http://pear.php.net/package/Numbers_Words
  */
 
-require_once "PEAR.php";
-require_once "Numbers/Words.php";
-
 /**
 * Class for translating numbers into Indonesian.
  *
@@ -36,7 +33,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_id extends Numbers_Words
+class Numbers_Words_id
 {
 
     // {{{ properties
@@ -46,28 +43,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'id';
+    public $locale = 'id';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Indonesia Language';
+    public $lang = 'Indonesia Language';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Bahasa Indonesia';
+    public $lang_native = 'Bahasa Indonesia';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'minus'; // minus sign
+    private $_minus = 'minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
@@ -76,7 +73,7 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('ribu'),
         6 => array('juta'),
@@ -108,7 +105,7 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'nol', 'satu', 'dua', 'tiga', 'empat',
         'lima', 'enam', 'tujuh', 'delapan', 'sembilan'
     );
@@ -118,7 +115,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     // }}}
     // {{{ toWords()
@@ -140,7 +137,7 @@
      * @author Ernas M. Jamil
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -293,5 +290,3 @@
     }
     // }}}
 }
-
-?>
Index: Numbers/Words/lang.dk.php
===================================================================
--- Numbers/Words/lang.dk.php	(wersja 33074)
+++ Numbers/Words/lang.dk.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,25 +25,13 @@
 /**
  * Class for translating numbers into Danish.
  *
- * @author Jesper Veggerby <pear.nosey@veggerby.dk>
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Danish.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Jesper Veggerby <pear.nosey@veggerby.dk>
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_dk extends Numbers_Words
+class Numbers_Words_dk
 {
 
     // {{{ properties
@@ -53,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'dk';
+    public $locale = 'dk';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Danish';
+    public $lang = 'Danish';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Dansk';
+    public $lang_native = 'Dansk';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'minus'; // minus sign
+    private $_minus = 'minus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural).
@@ -82,7 +70,7 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('tusind','tusinde'),
         6 => array('million','millioner'),
@@ -107,7 +95,7 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'nul', 'en', 'to', 'tre', 'fire',
         'fem', 'seks', 'syv', 'otte', 'ni'
     );
@@ -117,7 +105,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The currency names (based on the below links,
@@ -127,20 +115,20 @@
      * @link http://da.wikipedia.org/wiki/Valuta
      * @access private
      */
-    var $_currency_names = array(
+    private $_currency_names = array(
       'AUD' => array(array('australsk dollar', 'australske dollars'), array('cent')),
       'CAD' => array(array('canadisk dollar', 'canadisk dollars'), array('cent')),
       'CHF' => array(array('schweitzer franc'), array('rappen')),
       'CYP' => array(array('cypriotisk pund', 'cypriotiske pund'), array('cent')),
       'CZK' => array(array('tjekkisk koruna'), array('halerz')),
-      'DKK' => array(array('krone', 'kroner'), array('øre')),
+      'DKK' => array(array('krone', 'kroner'), array('Ã¸re')),
       'EUR' => array(array('euro'), array('euro-cent')),
       'GBP' => array(array('pund'), array('pence')),
       'HKD' => array(array('Hong Kong dollar', 'Hong Kong dollars'), array('cent')),
       'JPY' => array(array('yen'), array('sen')),
-      'NOK' => array(array('norsk krone', 'norske kroner'), array('øre')),
+      'NOK' => array(array('norsk krone', 'norske kroner'), array('Ã¸re')),
       'PLN' => array(array('zloty', 'zlotys'), array('grosz')),
-      'SEK' => array(array('svensk krone', 'svenske kroner'), array('øre')),
+      'SEK' => array(array('svensk krone', 'svenske kroner'), array('Ã¸re')),
       'USD' => array(array('dollar', 'dollars'), array('cent'))
     );
 
@@ -149,7 +137,7 @@
      * @var string
      * @access public
      */
-    var $def_currency = 'DKK'; // Danish krone
+    public $def_currency = 'DKK'; // Danish krone
 
     // }}}
     // {{{ toWords()
@@ -171,7 +159,7 @@
      * @author Jesper Veggerby <pear.nosey@veggerby.dk>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -376,7 +364,7 @@
      * @author Jesper Veggerby <pear.nosey@veggerby.dk>
      * @since  Numbers_Words 0.4
      */
-    function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
+    public function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
     {
         $int_curr = strtoupper($int_curr);
         if (!isset($this->_currency_names[$int_curr])) {
@@ -425,5 +413,3 @@
 
 
 }
-
-?>
Index: Numbers/Words/lang.cs.php
===================================================================
--- Numbers/Words/lang.cs.php	(wersja 33074)
+++ Numbers/Words/lang.cs.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,25 +25,13 @@
 /**
  * Class for translating numbers into Czech.
  *
- * @author Petr 'PePa' Pavel
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Czech.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Petr 'PePa' Pavel <petr.pavel@pepa.info>
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_cs extends Numbers_Words
+class Numbers_Words_cs
 {
 
     // {{{ properties
@@ -53,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'cs';
+    public $locale = 'cs';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Czech';
+    public $lang = 'Czech';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Czech';
+    public $lang_native = 'Czech';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'mínus'; // minus sign
+    private $_minus = 'mÃ­nus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
@@ -86,37 +74,37 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
-        3 => array('tisíc','tisíce','tisíc'),
-        6 => array('milion','miliony','milionù'),
+        3 => array('tisÃ­c','tisÃ­ce','tisÃ­c'),
+        6 => array('milion','miliony','milionÅ¯'),
         9 => array('miliarda','miliardy','miliard'),
-       12 => array('bilion','biliony','bilionù'),
+       12 => array('bilion','biliony','bilionÅ¯'),
        15 => array('biliarda','biliardy','biliard'),
-       18 => array('trilion','triliony','trilionù'),
+       18 => array('trilion','triliony','trilionÅ¯'),
        21 => array('triliarda','triliardy','triliard'),
 
-       24 => array('kvadrilion','kvadriliony','kvadrilionù'),
-       30 => array('kvintilion','kvintiliony','kvintilionù'),
-       36 => array('sextilion','sextiliony','sextilionù'),
-       42 => array('septilion','septiliony','septilionù'),
-
-       48 => array('oktilion','oktiliony','oktilionù'),
-       54 => array('nonilion','noniliony','nonilionù'),
-       60 => array('decilion','deciliony','decilionù'),
-
-       66 => array('undecilion','undeciliony','undecilionù'),
-       72 => array('duodecilion','duodeciliony','duodecilionù'),
-       78 => array('tredecilion','tredeciliony','tredecilionù'),
-       84 => array('kvatrodecilion','kvatrodeciliony','kvatrodecilionù'),
-       90 => array('kvindecilion','kvindeciliony','kvindecilionù'),
-       96 => array('sexdecilion','sexdeciliony','sexdecilionù'),
-      102 => array('septendecilion','septendeciliony','septendecilionù'),
-      108 => array('oktodecilion','oktodeciliony','oktodecilionù'),
-      114 => array('novemdecilion','novemdeciliony','novemdecilionù'),
-      120 => array('vigintilion','vigintiliony','vigintilionù'),
-      192 => array('duotrigintilion','duotrigintiliony','duotrigintilionù'),
-      600 => array('centilion','centiliony','centilionù')
+       24 => array('kvadrilion','kvadriliony','kvadrilionÅ¯'),
+       30 => array('kvintilion','kvintiliony','kvintilionÅ¯'),
+       36 => array('sextilion','sextiliony','sextilionÅ¯'),
+       42 => array('septilion','septiliony','septilionÅ¯'),
+
+       48 => array('oktilion','oktiliony','oktilionÅ¯'),
+       54 => array('nonilion','noniliony','nonilionÅ¯'),
+       60 => array('decilion','deciliony','decilionÅ¯'),
+
+       66 => array('undecilion','undeciliony','undecilionÅ¯'),
+       72 => array('duodecilion','duodeciliony','duodecilionÅ¯'),
+       78 => array('tredecilion','tredeciliony','tredecilionÅ¯'),
+       84 => array('kvatrodecilion','kvatrodeciliony','kvatrodecilionÅ¯'),
+       90 => array('kvindecilion','kvindeciliony','kvindecilionÅ¯'),
+       96 => array('sexdecilion','sexdeciliony','sexdecilionÅ¯'),
+      102 => array('septendecilion','septendeciliony','septendecilionÅ¯'),
+      108 => array('oktodecilion','oktodeciliony','oktodecilionÅ¯'),
+      114 => array('novemdecilion','novemdeciliony','novemdecilionÅ¯'),
+      120 => array('vigintilion','vigintiliony','vigintilionÅ¯'),
+      192 => array('duotrigintilion','duotrigintiliony','duotrigintilionÅ¯'),
+      600 => array('centilion','centiliony','centilionÅ¯')
 
         );
 
@@ -125,8 +113,8 @@
      * @var array
      * @access private
      */
-    var $_hundreds = array(
-        0 => 'sto', 'stì', 'sta', 'set'
+    private $_hundreds = array(
+        0 => 'sto', 'stÄ', 'sta', 'set'
     );
 
     /**
@@ -134,9 +122,9 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
-        0 => 'nula', 'jedna', 'dva', 'tøi', 'ètyøi',
-        'pìt', '¹est', 'sedm', 'osm', 'devìt'
+    private $_digits = array(
+        0 => 'nula', 'jedna', 'dva', 'tÅi', 'ÄtyÅi',
+        'pÄt', 'Å¡est', 'sedm', 'osm', 'devÄt'
     );
 
     /**
@@ -144,7 +132,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     // }}}
     // {{{ toWords()
@@ -166,7 +154,7 @@
      * @author Petr 'PePa' Pavel <petr.pavel@pepa.info>
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -234,7 +222,7 @@
             if ($h == 1) {
                 $ret .= $this->_sep . $this->_hundreds[0];
             } elseif ($h == 2) {
-                $ret .= $this->_sep . "dvì" . $this->_sep . $this->_hundreds[1];
+                $ret .= $this->_sep . "dvÄ" . $this->_sep . $this->_hundreds[1];
             } elseif ( ($h > 1) && ($h < 5) ) {
                 $ret .= $this->_sep . $this->_digits[$h] . $this->_sep . $this->_hundreds[2];
             } else {		//if ($h >= 5)
@@ -257,23 +245,23 @@
             break;
 
         case 5:
-            $ret .= $this->_sep . 'padesát';
+            $ret .= $this->_sep . 'padesÃ¡t';
             break;
 
         case 6:
-            $ret .= $this->_sep . '¹edesát';
+            $ret .= $this->_sep . 'Å¡edesÃ¡t';
             break;
 
         case 7:
-            $ret .= $this->_sep . 'sedmdesát';
+            $ret .= $this->_sep . 'sedmdesÃ¡t';
             break;
 
         case 8:
-            $ret .= $this->_sep . 'osmdesát';
+            $ret .= $this->_sep . 'osmdesÃ¡t';
             break;
 
         case 9:
-            $ret .= $this->_sep . 'devadesát';
+            $ret .= $this->_sep . 'devadesÃ¡t';
             break;
 
         case 1:
@@ -283,19 +271,19 @@
                 break;
 
             case 1:
-                $ret .= $this->_sep . 'jedenáct';
+                $ret .= $this->_sep . 'jedenÃ¡ct';
                 break;
 
             case 4:
-                $ret .= $this->_sep . 'ètrnáct';
+                $ret .= $this->_sep . 'ÄtrnÃ¡ct';
                 break;
 
             case 5:
-                $ret .= $this->_sep . 'patnáct';
+                $ret .= $this->_sep . 'patnÃ¡ct';
                 break;
 
             case 9:
-                $ret .= $this->_sep . 'devatenáct';
+                $ret .= $this->_sep . 'devatenÃ¡ct';
                 break;
 
             case 2:
@@ -303,7 +291,7 @@
             case 6:
             case 7:
             case 8:
-                $ret .= $this->_sep . $this->_digits[$d] . 'náct';
+                $ret .= $this->_sep . $this->_digits[$d] . 'nÃ¡ct';
                 break;
             }
             break;
@@ -342,5 +330,3 @@
     }
     // }}}
 }
-
-?>
Index: Numbers/Words/lang.pt_BR.php
===================================================================
--- Numbers/Words/lang.pt_BR.php	(wersja 33074)
+++ Numbers/Words/lang.pt_BR.php	(kopia robocza)
@@ -22,11 +22,6 @@
  */
 
 /**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
  * Class for translating numbers into Brazilian Portuguese. This class complies
  * to Brazilian Academy of Letters rules as of 2008-12-12.
  *
@@ -36,49 +31,49 @@
  * @license  http://www.php.net/license/3_01.txt  PHP License 3.01
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_pt_BR extends Numbers_Words
+class Numbers_Words_pt_BR
 {
     /**
      * Locale name
      * @var string
      * @access public
      */
-    var $locale = 'pt_BR';
+    public $locale = 'pt_BR';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Brazilian Portuguese';
+    public $lang = 'Brazilian Portuguese';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Português Brasileiro';
+    public $lang_native = 'PortuguÃªs Brasileiro';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'negativo';
+    private $_minus = 'negativo';
 
     /**
      * The word separator for numerals
      * @var string
      * @access private
      */
-    var $_sep = ' e ';
+    private $_sep = ' e ';
 
     /**
      * The special separator for numbers and currency names
      * @var string
      * @access private
      */
-    var $_curr_sep = ' de ';
+    private $_curr_sep = ' de ';
 
     /**
      * The array containing numbers 11-19.
@@ -87,7 +82,7 @@
      * @var array
      * @access private
      */
-    var $_contractions = array(
+    private $_contractions = array(
         '',
         'onze',
         'doze',
@@ -100,7 +95,7 @@
         'dezenove'
     );
 
-    var $_words = array(
+    private $_words = array(
         /**
          * The array containing the digits (indexed by the digits themselves).
          * @var array
@@ -110,7 +105,7 @@
             '',         // 0: not displayed
             'um',
             'dois',
-            'três',
+            'trÃªs',
             'quatro',
             'cinco',
             'seis',
@@ -130,7 +125,7 @@
             'vinte',
             'trinta',
             'quarenta',
-            'cinqüenta',
+            'cinqÃ¼enta',
             'sessenta',
             'setenta',
             'oitenta',
@@ -161,26 +156,26 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         '',         // 0: not displayed
         'mil',
-        'milhão',
-        'bilhão',
-        'trilhão',
-        'quatrilhão',
-        'quintilhão',
-        'sextilhão',
-        'septilhão',
-        'octilhão',
-        'nonilhão',
-        'decilhão',
-        'undecilhão',
-        'dodecilhão',
-        'tredecilhão',
-        'quatuordecilhão',
-        'quindecilhão',
-        'sedecilhão',
-        'septendecilhão'
+        'milhÃ£o',
+        'bilhÃ£o',
+        'trilhÃ£o',
+        'quatrilhÃ£o',
+        'quintilhÃ£o',
+        'sextilhÃ£o',
+        'septilhÃ£o',
+        'octilhÃ£o',
+        'nonilhÃ£o',
+        'decilhÃ£o',
+        'undecilhÃ£o',
+        'dodecilhÃ£o',
+        'tredecilhÃ£o',
+        'quatuordecilhÃ£o',
+        'quindecilhÃ£o',
+        'sedecilhÃ£o',
+        'septendecilhÃ£o'
     );
 
     /**
@@ -190,9 +185,9 @@
      * @link http://pt.wikipedia.org/wiki/ISO_4217
      * @access private
      */
-    var $_currency_names = array(
+    private $_currency_names = array(
         'BRL' => array(array('real', 'reais'), array('centavo', 'centavos')),
-        'USD' => array(array('dólar', 'dólares'), array('centavo', 'centavos')),
+        'USD' => array(array('dÃ³lar', 'dÃ³lares'), array('centavo', 'centavos')),
         'EUR' => array(array('euro', 'euros'), array('centavo', 'centavos')),
         'GBP' => array(array('libra esterlina', 'libras esterlinas'), array('centavo', 'centavos')),
         'JPY' => array(array('iene', 'ienes'), array('centavo', 'centavos')),
@@ -211,7 +206,7 @@
      * @var string
      * @access public
      */
-    var $def_currency = 'BRL'; // Real
+    public $def_currency = 'BRL'; // Real
 
     // {{{ toWords()
 
@@ -227,7 +222,7 @@
      * @author Igor Feghali <ifeghali@php.net>
      * @since  Numbers_Words 0.11.0
      */
-    function toWords($num)
+    public function toWords($num)
     {
         $neg   = 0;
         $ret   = array();
@@ -283,7 +278,7 @@
              * Testing plural of exponent
              */
             if ($chunk > 1) {
-                $exponent = str_replace('ão', 'ões', $this->_exponent[$index]);
+                $exponent = str_replace('Ã£o', 'Ãµes', $this->_exponent[$index]);
             } else {
                 $exponent = $this->_exponent[$index];
             }
@@ -327,7 +322,7 @@
      * @author Igor Feghali <ifeghali@php.net>
      * @since  Numbers_Words 0.15.1
      */
-    function _parseChunk($chunk)
+    private function _parseChunk($chunk)
     {
         /**
          * Base Case
@@ -373,7 +368,7 @@
      * @author Igor Feghali <ifeghali@php.net>
      * @since  Numbers_Words 0.15.1
      */
-    function _mustSeparate($chunks)
+    private function _mustSeparate($chunks)
     {
         $chunk = null;
 
@@ -413,7 +408,7 @@
      * @author Igor Feghali <ifeghali@php.net>
      * @since  Numbers_Words 0.11.0
      */
-    function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
+    public function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
     {
         $neg   = 0;
         $ret   = array();
@@ -539,5 +534,3 @@
     }
     // }}}
 }
-
-?>
Index: Numbers/Words/lang.fr.php
===================================================================
--- Numbers/Words/lang.fr.php	(wersja 33074)
+++ Numbers/Words/lang.fr.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -23,11 +23,6 @@
  */
 
 /**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
  * Class for translating numbers into French.
  *
  * @category Numbers
@@ -36,7 +31,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_fr extends Numbers_Words
+class Numbers_Words_fr
 {
 
     // {{{ properties
@@ -46,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'fr';
+    public $locale = 'fr';
 
     /**
      * Language name in English.
      * @var string
      * @access public
      */
-    var $lang = 'French';
+    public $lang = 'French';
 
     /**
      * Native language name.
      * @var string
      * @access public
      */
-    var $lang_native = 'Français';
+    public $lang_native = 'FranÃ§ais';
 
     /**
      * The words for some numbers.
      * @var string
      * @access private
      */
-    var $_misc_numbers = array(
+    private $_misc_numbers = array(
         10=>'dix',      // 10
             'onze',     // 11
             'douze',    // 12
@@ -89,63 +84,63 @@
      * @var string
      * @access private
      */
-    var $_digits = array(1=>"un", "deux", "trois", "quatre", "cinq", "six", "sept", "huit", "neuf");
+    private $_digits = array(1=>"un", "deux", "trois", "quatre", "cinq", "six", "sept", "huit", "neuf");
 
     /**
      * The word for zero.
      * @var string
      * @access private
      */
-    var $_zero = 'zéro';
+    private $_zero = 'zÃ©ro';
 
     /**
      * The word for infinity.
      * @var string
      * @access private
      */
-    var $_infinity = 'infini';
+    private $_infinity = 'infini';
 
     /**
      * The word for the "and" language construct.
      * @var string
      * @access private
      */
-    var $_and = 'et';
+    private $_and = 'et';
     
     /**
      * The word separator.
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     /**
      * The dash liaison.
      * @var string
      * @access private
      */
-    var $_dash = '-';
+    private $_dash = '-';
 
     /**
      * The word for the minus sign.
      * @var string
      * @access private
      */
-    var $_minus = 'moins'; // minus sign
+    private $_minus = 'moins'; // minus sign
 
     /**
      * The plural suffix (except for hundred).
      * @var string
      * @access private
      */
-    var $_plural = 's'; // plural suffix
+    private $_plural = 's'; // plural suffix
 
     /**
      * The suffixes for exponents (singular).
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => '',
         3 => 'mille',
         6 => 'million',
@@ -264,7 +259,7 @@
      * @author Kouber Saparev <kouber@php.net>
      * @since  PHP 4.2.3
      */
-    function _splitNumber($num)
+    private function _splitNumber($num)
     {
         if (is_string($num)) {
             $ret    = array();
@@ -299,7 +294,7 @@
      * @access private
      * @author Kouber Saparev <kouber@php.net>
      */
-    function _showDigitsGroup($num, $last = false)
+    private function _showDigitsGroup($num, $last = false)
     {
         $ret = '';
         
@@ -396,7 +391,7 @@
      * @access public
      * @author Kouber Saparev <kouber@php.net>
      */
-    function toWords($num = 0)
+    public function toWords($num = 0)
     {
         $ret = '';
 
@@ -445,4 +440,3 @@
     }
     // }}}
 }
-?>
Index: Numbers/Words/lang.es.php
===================================================================
--- Numbers/Words/lang.es.php	(wersja 33074)
+++ Numbers/Words/lang.es.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -24,18 +24,6 @@
 
 /**
  * Class for translating numbers into Spanish (Castellano).
- *
- * @author Xavier Noguer
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Spanish (Castellano).
  * It supports up to decallones (10^6).
  * It doesn't support spanish tonic accents (acentos).
  *
@@ -45,7 +33,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_es extends Numbers_Words
+class Numbers_Words_es
 {
     // {{{ properties
 
@@ -54,54 +42,54 @@
      * @var string
      * @access public
      */
-    var $locale = 'es';
+    public $locale = 'es';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Spanish';
+    public $lang = 'Spanish';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Español';
+    public $lang_native = 'EspaÃ±ol';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'menos';
+    private $_minus = 'menos';
 
     /**
      * The sufixes for exponents (singular and plural)
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array('',''),
         3 => array('mil','mil'),
-        6 => array('millón','millones'),
-       12 => array('billón','billones'),
-       18 => array('trilón','trillones'),
-       24 => array('cuatrillón','cuatrillones'),
-       30 => array('quintillón','quintillones'),
-       36 => array('sextillón','sextillones'),
-       42 => array('septillón','septillones'),
-       48 => array('octallón','octallones'),
-       54 => array('nonallón','nonallones'),
-       60 => array('decallón','decallones'),
+        6 => array('millÃ³n','millones'),
+       12 => array('billÃ³n','billones'),
+       18 => array('trilÃ³n','trillones'),
+       24 => array('cuatrillÃ³n','cuatrillones'),
+       30 => array('quintillÃ³n','quintillones'),
+       36 => array('sextillÃ³n','sextillones'),
+       42 => array('septillÃ³n','septillones'),
+       48 => array('octallÃ³n','octallones'),
+       54 => array('nonallÃ³n','nonallones'),
+       60 => array('decallÃ³n','decallones'),
         );
     /**
      * The array containing the digits (indexed by the digits themselves).
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
         0 => 'cero', 'uno', 'dos', 'tres', 'cuatro',
         'cinco', 'seis', 'siete', 'ocho', 'nueve'
         );
@@ -110,7 +98,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
     // }}}
     // {{{ toWords()
     /**
@@ -129,7 +117,7 @@
      * @author Xavier Noguer
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0)
+    public function toWords($num, $power = 0)
     {
         // The return string;
         $ret = '';
@@ -242,7 +230,7 @@
                 $ret .= $this->_sep . 'veinte';
             } else {
                 if (($power > 0) and ($d == 1)) {
-                    $ret .= $this->_sep . 'veintiún';
+                    $ret .= $this->_sep . 'veintiÃºn';
                 } else {
                     $ret .= $this->_sep . 'veinti' . $this->_digits[$d];
                 }
@@ -329,4 +317,3 @@
     }
     // }}}
 }
-?>
Index: Numbers/Words/lang.et.php
===================================================================
--- Numbers/Words/lang.et.php	(wersja 33074)
+++ Numbers/Words/lang.et.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -21,7 +21,6 @@
  * @version  CVS: $Id: lang.et.php 269655 2008-11-25 03:53:39Z clockwerx $
  * @link     http://pear.php.net/package/Numbers_Words
  */
-require_once "Numbers/Words.php";
 
 /**
  * Class for translating numbers into Estonian.
@@ -32,7 +31,7 @@
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_et extends Numbers_Words
+class Numbers_Words_et
 {
 
     // {{{ properties
@@ -42,28 +41,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'et';
+    public $locale = 'et';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Estonian';
+    public $lang = 'Estonian';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'eesti keel';
+    public $lang_native = 'eesti keel';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'miinus'; // minus sign
+    private $_minus = 'miinus'; // minus sign
 
     /**
      * The sufixes for exponents (singular and plural)
@@ -74,7 +73,7 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('tuhat'),
         6 => array('miljon'),
@@ -192,9 +191,9 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
-        0 => 'null', 'üks', 'kaks', 'kolm', 'neli',
-        'viis', 'kuus', 'seitse', 'kaheksa', 'üheksa'
+    private $_digits = array(
+        0 => 'null', 'Ã¼ks', 'kaks', 'kolm', 'neli',
+        'viis', 'kuus', 'seitse', 'kaheksa', 'Ã¼heksa'
     );
 
     /**
@@ -202,7 +201,7 @@
      * @var string
      * @access private
      */
-    var $_sep = ' ';
+    private $_sep = ' ';
 
     // }}}
     // {{{ toWords()
@@ -223,7 +222,7 @@
      * @access public
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '')
+    public function toWords($num, $power = 0, $powsuffix = '')
     {
         $ret = '';
 
@@ -296,13 +295,13 @@
         case 4:
         case 3:
         case 2:
-            $ret .= $this->_sep . $this->_digits[$t] . 'kümmend';
+            $ret .= $this->_sep . $this->_digits[$t] . 'kÃ¼mmend';
             break;
 
         case 1:
             switch ($d) {
             case 0:
-                $ret .= $this->_sep . 'kümme';
+                $ret .= $this->_sep . 'kÃ¼mme';
                 break;
 
             case 1:
@@ -349,5 +348,3 @@
     }
     // }}}
 }
-
-?>
Index: Numbers/Words/lang.it_IT.php
===================================================================
--- Numbers/Words/lang.it_IT.php	(wersja 33074)
+++ Numbers/Words/lang.it_IT.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -25,19 +25,6 @@
 
 /**
  * Class for translating numbers into Italian.
- *
- * @author Filippo Beltramini <phil@esight.it>
- * @author Davide Caironi     <cairo@esight.it>
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Italian.
  * It supports up to quadrilions
  *
  * @category Numbers
@@ -48,7 +35,7 @@
  * @link     http://pear.php.net/package/Numbers_Words
  */
 
-class Numbers_Words_it_IT extends Numbers_Words
+class Numbers_Words_it_IT
 {
     // {{{ properties
 
@@ -57,35 +44,35 @@
      * @var string
      * @access public
      */
-    var $locale = 'it_IT';
+    public $locale = 'it_IT';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Italian';
+    public $lang = 'Italian';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Italiano';
+    public $lang_native = 'Italiano';
 
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'meno ';
+    private $_minus = 'meno ';
 
     /**
      * The sufixes for exponents (singular and plural)
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array('',''),
         3 => array('mille','mila'),
         6 => array('milione','miloni'),
@@ -98,7 +85,7 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
+    private $_digits = array(
       0 => 'zero', 'uno', 'due', 'tre', 'quattro',
        'cinque', 'sei', 'sette', 'otto', 'nove'
     );
@@ -108,7 +95,7 @@
      * @var string
      * @access private
      */
-    var $_sep = '';
+    private $_sep = '';
     // }}}
     // {{{ toWords()
     /**
@@ -127,7 +114,7 @@
      * @author Filippo Beltramini
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0)
+    public function toWords($num, $power = 0)
     {
         // The return string;
         $ret = '';
@@ -391,4 +378,3 @@
     }
     // }}}
 }
-?>
\ Brak znaku nowej linii na koÅcu pliku
Index: Numbers/Words/lang.hu_HU.php
===================================================================
--- Numbers/Words/lang.hu_HU.php	(wersja 33074)
+++ Numbers/Words/lang.hu_HU.php	(kopia robocza)
@@ -2,7 +2,7 @@
 /**
  * Numbers_Words
  *
- * PHP version 4
+ * PHP version 5
  *
  * Copyright (c) 1997-2006 The PHP Group
  *
@@ -29,25 +29,13 @@
 /**
  * Class for translating numbers into Hungarian.
  *
- * @author Nils Homp
- * @package Numbers_Words
- */
-
-/**
- * Include needed files
- */
-require_once "Numbers/Words.php";
-
-/**
- * Class for translating numbers into Hungarian.
- *
  * @category Numbers
  * @package  Numbers_Words
  * @author   Nils Homp
  * @license  PHP 3.0 http://www.php.net/license/3_0.txt
  * @link     http://pear.php.net/package/Numbers_Words
  */
-class Numbers_Words_hu_HU extends Numbers_Words
+class Numbers_Words_hu_HU
 {
 
     // {{{ properties
@@ -57,28 +45,28 @@
      * @var string
      * @access public
      */
-    var $locale = 'hu_HU';
+    public $locale = 'hu_HU';
 
     /**
      * Language name in English
      * @var string
      * @access public
      */
-    var $lang = 'Hungarian';
+    public $lang = 'Hungarian';
 
     /**
      * Native language name
      * @var string
      * @access public
      */
-    var $lang_native = 'Magyar';
+    public $lang_native = 'Magyar';
     
     /**
      * The word for the minus sign
      * @var string
      * @access private
      */
-    var $_minus = 'Minusz'; // minus sign
+    private $_minus = 'Minusz'; // minus sign
     
     /**
      * The sufixes for exponents (singular and plural)
@@ -87,30 +75,30 @@
      * @var array
      * @access private
      */
-    var $_exponent = array(
+    private $_exponent = array(
         0 => array(''),
         3 => array('ezer'),
-        6 => array('millió'),
-        9 => array('milliárd'),
-       12 => array('billió'),
-       15 => array('billiárd'),
-       18 => array('trillió'),
-       21 => array('trilliárd'),
-       24 => array('kvadrillió'),
-       27 => array('kvadrilliárd'),
-       30 => array('kvintillió'),
-       33 => array('kvintilliárd'),
-       36 => array('szextillió'),
-       39 => array('szextilliárd'),
-       42 => array('szeptillió'),
-       45 => array('szeptilliárd'),
-       48 => array('oktillió'),
-       51 => array('oktilliárd'),
-       54 => array('nonillió'),
-       57 => array('nonilliárd'),
-       60 => array('decillió'),
-       63 => array('decilliárd'),
-       600 => array('centillió')
+        6 => array('milliÃ³'),
+        9 => array('milliÃ¡rd'),
+       12 => array('billiÃ³'),
+       15 => array('billiÃ¡rd'),
+       18 => array('trilliÃ³'),
+       21 => array('trilliÃ¡rd'),
+       24 => array('kvadrilliÃ³'),
+       27 => array('kvadrilliÃ¡rd'),
+       30 => array('kvintilliÃ³'),
+       33 => array('kvintilliÃ¡rd'),
+       36 => array('szextilliÃ³'),
+       39 => array('szextilliÃ¡rd'),
+       42 => array('szeptilliÃ³'),
+       45 => array('szeptilliÃ¡rd'),
+       48 => array('oktilliÃ³'),
+       51 => array('oktilliÃ¡rd'),
+       54 => array('nonilliÃ³'),
+       57 => array('nonilliÃ¡rd'),
+       60 => array('decilliÃ³'),
+       63 => array('decilliÃ¡rd'),
+       600 => array('centilliÃ³')
         );
 
     /**
@@ -118,9 +106,9 @@
      * @var array
      * @access private
      */
-    var $_digits = array(
-        0 => 'nulla', 'egy', 'kettõ', 'három', 'négy',
-        'öt', 'hat', 'hét', 'nyolc', 'kilenc'
+    private $_digits = array(
+        0 => 'nulla', 'egy', 'kettÅ', 'hÃ¡rom', 'nÃ©gy',
+        'Ã¶t', 'hat', 'hÃ©t', 'nyolc', 'kilenc'
     );
 
     /**
@@ -128,7 +116,7 @@
      * @var string
      * @access private
      */
-    var $_sep = '';
+    private $_sep = '';
 
     /**
      * The currency names (based on the below links,
@@ -140,7 +128,7 @@
      * @link http://www.shoestring.co.kr/world/p.visa/change.htm Currency names in English
      * @access private
      */
-    var $_currency_names = array(
+    private $_currency_names = array(
       'ALL' => array(array('lek'), array('qindarka')),
       'AUD' => array(array('Australian dollar'), array('cent')),
       'BAM' => array(array('convertible marka'), array('fenig')),
@@ -159,7 +147,7 @@
       'HRK' => array(array('Croatian kuna'), array('lipa')),
       'HUF' => array(array('forint'), array('filler')),
       'ILS' => array(array('new sheqel','new sheqels'), array('agora','agorot')),
-      'ISK' => array(array('Icelandic króna'), array('aurar')),
+      'ISK' => array(array('Icelandic krÃ³na'), array('aurar')),
       'JPY' => array(array('yen'), array('sen')),
       'LTL' => array(array('litas'), array('cent')),
       'LVL' => array(array('lat'), array('sentim')),
@@ -172,7 +160,7 @@
       'SEK' => array(array('Swedish krona'), array('oere')),
       'SIT' => array(array('Tolar'), array('stotinia')),
       'SKK' => array(array('Slovak koruna'), array()),
-      'TRL' => array(array('lira'), array('kuruþ')),
+      'TRL' => array(array('lira'), array('kuruÅ£')),
       'UAH' => array(array('hryvna'), array('cent')),
       'USD' => array(array('dollar'), array('cent')),
       'YUM' => array(array('dinars'), array('para')),
@@ -184,7 +172,7 @@
      * @var string
      * @access public
      */
-    var $def_currency = 'HUF'; // forint
+    public $def_currency = 'HUF'; // forint
 
     // }}}
     // {{{ toWords()
@@ -206,7 +194,7 @@
      * @author Nils Homp
      * @since  PHP 4.2.3
      */
-    function toWords($num, $power = 0, $powsuffix = '') 
+    public function toWords($num, $power = 0, $powsuffix = '') 
     {
         $ret = '';        
         
@@ -269,7 +257,7 @@
         }
     
         if ($h) {
-            $ret .= $this->_sep . $this->_digits[$h] . $this->_sep . 'száz';
+            $ret .= $this->_sep . $this->_digits[$h] . $this->_sep . 'szÃ¡z';
         }
 
         // ten, twenty etc.
@@ -294,7 +282,7 @@
         case 2:
             switch ($d) {
             case 0:
-                $ret .= $this->_sep . 'húsz';
+                $ret .= $this->_sep . 'hÃºsz';
                 break;   
             case 1: 
             case 2:
@@ -305,14 +293,14 @@
             case 7:
             case 8:
             case 9:
-                $ret .= $this->_sep . 'húszon';
+                $ret .= $this->_sep . 'hÃºszon';
                 break;
             }
             break;
         case 1:
             switch ($d) {
             case 0:
-                $ret .= $this->_sep . 'tíz';
+                $ret .= $this->_sep . 'tÃ­z';
                 break;   
             case 1: 
             case 2:
@@ -372,7 +360,7 @@
      * @author Piotr Klaban <makler@man.torun.pl>
      * @since  Numbers_Words 0.4
      */
-    function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
+    public function toCurrencyWords($int_curr, $decimal, $fraction = false, $convert_fraction = true)
     {
         $int_curr = strtoupper($int_curr);
         if (!isset($this->_currency_names[$int_curr])) {
@@ -414,5 +402,3 @@
     // }}}
 
 }
-
-?>
